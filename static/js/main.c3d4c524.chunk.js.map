{"version":3,"sources":["components/HeaderBar.jsx","components/FooterBar.jsx","components/Total.jsx","utils.js","loadData.js","naturalSortAlgorithm.js","components/Table.jsx","components/MapArea.jsx","containers/deliveries.jsx","components/AgeHStackedBarChart.jsx","containers/agedoses.jsx","components/HealedHStackedBarChart.jsx","containers/healed.jsx","components/StackedBarChart.jsx","components/RangeWeek.jsx","containers/weeks.jsx","components/Over60HStackedBarChart.jsx","containers/over60.jsx","containers/databox.jsx","components/BarChartsSupplier.jsx","components/Supplier.jsx","components/LocationsTable.jsx","containers/locations.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["HeaderBar","className","src","height","alt","href","aria-label","rel","FooterBar","Total","props","summary","timestamp","moment","format","tot","toLocaleString","sumDoseX","y","acc","x","filterBy","z","replaceArea","filterByArea","area","areaMapping","code","ABR","BAS","CAL","CAM","EMR","FVG","LAZ","LIG","LOM","MAR","MOL","PAB","PAT","PIE","PUG","SAR","SIC","TOS","UMB","VDA","VEN","baseURL","obj","retobj","key","inverse","sommVaxSummaryURL","sommVaxDetailURL","vaxSummaryURL","vaxLocationsURL","lastUpdateURL","supplierDoses","plateaURL","plateaDoseAddizionaleBoosterURL","plateaDoseSecondBoosterURL","plateaDoseThirdBoosterURL","guaritiURL","coperturaURL","elaborate","data","dataSommVaxSummary","dataSommVaxDetail","dataVaxSummary","dataCopertura","dataPlatea","dataGuariti","dataSupplierDoses","dataVaxLocations","dataPlateaDoseAddizionaleBooster","dataPlateaSecondBooster","dataPlateaThirdBooster","fasciaOver60","fasciaEta","dataLastUpdate","ultimo_aggiornamento","filter","d","reduce","totalDoses","somministrazioni_over60","_","sum","map","e","includes","fascia_anagrafica","vaccinati","guarigioni_over60","guariti","prima_dose","eta","d1","pregressa_infezione","dpi","seconda_dose","d2","prima_dose_janssen","forn","prima_dose_baby","seconda_dose_baby","pregressa_infezione_baby","prima_dose_janssen_baby","dose_addizionale_booster","db1","dose_second_booster","db2","dose_third_booster","db3","totalPlatea","totale_popolazione","totalPlateaBaby","totalPlateaOver60","totalPlateaDoseAddizionaleBooster","totalPlateaDoseSecondBooster","totalPlateaDoseThirdBooster","databoxContent","totalGuaritiNotBaby","guariti_senza_somm","totalGuaritiDoppiaNotBaby","guariti_post_somm","totalGuaritiBoosterNotBaby","guariti_post_1booster","totalGuaritiSecondBoosterNotBaby","guariti_post_2booster","totalGuaritiBaby","keyValueOver60","keysOver60","Object","keys","over60","values","over60Data","groupBy","items","rowAge","keyAge","entryTmp","value","sort","a","b","label","over60MapData","entry","head","totale","popolazione","popolazioneFascia","over60RegionData","subItems","over60Content","over60Color","deliverySummary","deliveredByArea","totalDeliverySummary","details","dosi_consegnate","dosi_somministrate","percentuale_somministrazione","totalGuaritiHealedSection","keyValueHealed","keysHealed","healed","healedData","healedMapData","healedRegionData","healedContent","healedColor","spectrum","suppliersColor","suppliers","row","push","indexOfPediatrico","indexOf","splice","rowFornitore","length","weeksMappingOptimation","index","suppliersWeek","date","Date","Moment","from","labelfrom","to","getTime","labelto","total","week","f","m","weekContent","keyValueDoses","keysDosesAges","dosesAges","dosesAgesData","secondDosesMapData","somministrazioni","dosesAgesRegionData","agedosesContent","dosesAgesColor","totalSuplier","numero_dosi","groups","allDosesSupplier","k","groupByKey","group","fornitore","allDoses","locations","locationsByRegion","loadData","Promise","all","fetch","resSommVaxSummary","resSommVaxDetail","resVaxSummary","resVaxLocations","resLastUpdate","resSupplierDoses","resPlatea","resPlateaDoseAddizionaleBooster","resPlateaDoseSecondBooster","resPlateaDoseThirdBooster","resGuariti","resCopertura","json","naturalSort","html","re","sre","dre","hre","ore","htmre","toString","replace","xN","split","yN","xD","parseInt","match","parse","yD","cLoc","numS","Math","max","oFxNcL","parseFloat","oFyNcL","isNaN","jQuery","dataTableExt","oSort","toLowerCase","$","DataTable","columns","title","Table","deliveryTableData","useEffect","find","append","dom","paging","searching","destroy","language","decimal","thousands","columnDefs","targets","width","type","render","Number","footerCallback","start","end","display","api","intVal","i","totalDelivery","column","search","totalVaccines","totalPercentage","footer","toFixed","id","cellSpacing","style","paddingBottom","MapArea","handleMapDeliveryClick","fillMapDeliveryArea","fillBy","tooltip","percentage","useState","geographies","setGeographies","maxValue","setMaxValue","maxBy","projection","d3","center","rotate","parallels","scale","translate","res","topojson","objects","regions","features","fetchData","reg_name","properties","region","trim","fill","field","stroke","strokeWidth","onClick","Deliveries","deliveryMapData","setDeliveryMapData","setDeliveryTableData","deliverySelectedRegion","setDeliverySelectedRegion","setTotalDelivery","selectedAge","setSelectedAge","isEmpty","resetFilter","scaleOp","valueToFill","deliveryTableFilteredData","r","AgeHStackedBarChart","handleRectClick","labels","colors","selectedCodeAge","regionSelected","myRef","useRef","divRef","current","selectAll","remove","draw","responsivefy","svg","container","node","parentNode","aspect","resize","targetWidth","attr","round","call","window","on","dataset","margin","xScale","domain","yScale","padding","range","chart","path","enter","ageCode","replaceAll","bandwidth","this","transition","event","regione","pageY","pageX","perc","exit","ref","AgeDoses","setdosesAgesColor","setdosesAges","dosesAgesKeys","setDosesAgesKeys","setKeyValueDoses","setDosesAgesData","categoryMapData","setCategoryMapData","categoryMapField","setCategoryMapField","categorySelectedRegion","setCategorySelectedRegion","categorySelectedRegionDescr","setCategorySelectedRegionDescr","setSelectedCodeAge","totalByCategory","setTotalByCategory","property","xprop","yprop","cat","dose","backgroundColor","HealedHStackedBarChart","Healed","setHealedColor","setHealed","healedKeys","setHealedKeys","setHealedData","setKeyValueHealed","Totale","itemVal","val","StackedBarChart","selectedFrom","selectedTo","ytitle","slice","text","RangeWeek","min","changeFrom","changeTo","setValues","justifyContent","flexWrap","draggableTrack","step","rtl","onChange","renderTrack","children","onMouseDown","onTouchStart","marginRight","marginLeft","borderRadius","background","getTrackBackground","alignSelf","renderThumb","isDragged","alignItems","boxShadow","Weeks","setSuppliersColor","setSuppliers","setSuppliersWeek","setFrom","setTo","supply","xtitle","marginBottom","Over60HStackedBarChart","Over60","setOver60Color","setOver60","over60Keys","setOver60Keys","setOver60Data","setKeyValueOver60","Databox","somministrazioniOver60","setSomministrazioniOver60","percentualeSomministrazioniOver60","setPercentualeSomministrazioniOver60","guarigioniOver60","setGuarigioniOver60","percentualeGuarigioniOver60","setPercentualeGuarigioniOver60","totaleOver60","setTotaleOver60","percentualeTotaleOver60","setPercentualeTotaleOver60","totalePrimaDose","setTotalePrimaDose","percentualePrimaDosePopolazione","setPercentualePrimaDosePopolazione","totalePersoneVaccinate","setTotalePersoneVaccinate","totalePersoneVaccinatePopolazione","setTotalePersoneVaccinatePopolazione","totaleDoseAddizionaleBooster","setTotaleDoseAddizionaleBooster","percentualeDoseAddizionaleBooster","setPercentualeDoseAddizionaleBooster","totalePersoneSecondBooster","setTotalePersoneSecondBooster","percentualePersoneSecondBooster","setPercentualePersoneSecondBooster","totalePersoneThirdBooster","setTotalePersoneThirdBooster","percentualePersoneThirdBooster","setPercentualePersoneThirdBooster","totalePersoneGuarite","setTotalePersoneGuarite","totalePersoneGuaritePopolazione","setTotalePersoneGuaritePopolazione","totalePersoneGuariteDoppiaDose","setTotalePersoneGuariteDoppiaDose","totalePersoneGuaritePopolazioneDoppiaDose","setTotalePersoneGuaritePopolazioneDoppiaDose","totaleAlmenoUnaGuariti","setTotaleAlmenoUnaGuariti","percentualeAlmenoUnaGuariti","setPercentualeAlmenoUnaGuariti","totaleDoseAddizionaleGuaritiDoppiaDose","setTotaleDoseAddizionaleGuaritiDoppiaDose","percentualeDoseAddizionaleGuaritiDoppiaDose","setPercentualeDoseAddizionaleGuaritiDoppiaDose","totaleGuaritiDopoDoseBooster","setTotaleGuaritiDopoDoseBooster","percentualeGuaritiDopoDoseBooster","setPercentualeGuaritiDopoDoseBooster","totaleGuaritiDopoSecondaDoseBooster","setTotaleGuaritiDopoSecondaDoseBooster","percentualeGuaritiDopoSecondaDoseBooster","setPercentualeGuaritiDopoSecondaDoseBooster","totaleBooster","setTotaleBooster","percentualeTotaleBooster","setPercentualeTotaleBooster","totaleThirdBooster","setTotaleThirdBooster","percentualeTotaleThirdBooster","setPercentualeTotaleThirdBooster","totalePrimaDoseBaby","setTotalePrimaDoseBaby","percentualePrimaDosePopolazioneBaby","setPercentualePrimaDosePopolazioneBaby","totalePersoneVaccinateBaby","setTotalePersoneVaccinateBaby","totalePersoneVaccinatePopolazioneBaby","setTotalePersoneVaccinatePopolazioneBaby","totalePersoneGuariteBaby","setTotalePersoneGuariteBaby","totalePersoneGuaritePopolazioneBaby","setTotalePersoneGuaritePopolazioneBaby","totalePrimaDoseConGuaritiBaby","setTotalePrimaDoseConGuaritiBaby","percentualeTotalePrimaDoseConGuaritiBaby","setPercentualeTotalePrimaDoseConGuaritiBaby","digit","minimumFractionDigits","maximumFractionDigits","prima","primaBaby","totBaby","BarChartSupplier","maxScale","handleBarChartClick","selected","Supplier","selectedLocationCategoryMap","setSelectedLocationCategoryMap","selectedSupplier","setelectedSupplier","deliveryBarChartData","setdeliveryBarChartData","setTotalSuplier","tmp","currentRect","bar","document","getElementById","clickEvt","MouseEvent","dispatchEvent","simulateClick","LocationsTable","setLocationCount","table","bLengthChange","info","scrollY","scrollCollapse","rows","count","TextBoxTotal","locationCount","TextBoxMap","Locations","setSummary","selectedLocation","setSelectedLocation","App","then","loading","hideLoader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.c3d4c524.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bootstrap-italia/dist/css/bootstrap-italia.min.css\";\nimport \"../App.css\";\nimport \"typeface-titillium-web\";\nimport \"typeface-roboto-mono\";\nimport \"typeface-lora\";\n\nexport const HeaderBar = () => {\n  return (\n    <>\n      {/* <Header small={false} theme=\"\" type=\"slim\">\n\n      </Header> */}\n    <div className=\"row m-0 bg-tertiary\" >\n        <div className=\"col-12 col-md-4 d-flex justify-content-md-center justify-content-sm-start logo-section pt-2 pb-2\">\n            <img src=\"logo.svg\" height=\"4px\" alt=\"Logo\" className=\"logo pl-5 pr-2\" />\n            <p className=\"pt-2\">\n                <a href=\"http://www.governo.it\" aria-label=\"Presidenza del Consiglio dei Ministri\" className=\"text-decoration-none\" rel=\"noreferrer\" alt=\"Presidenza del Consiglio dei Ministri\">\n                Presidenza del Consiglio dei Ministri\n                </a>\n            </p>\n        </div>\n        <div className=\"col-12 col-md-4 d-flex justify-content-md-center justify-content-sm-start logo-section pr-sm-0 pt-2 pb-2\">\n            <img src=\"logo.svg\" height=\"4px\" alt=\"Logo\" className=\"logo pl-5 pr-2\" />\n            <p className=\"pt-2\">\n                <a className=\"text-decoration-none\" href=\"https://www.governo.it/it/dipartimenti/unit-il-completamento-della-campagna-vaccinale-e-ladozione-di-altre-misure-di-contrasto\" aria-label =\"Unità Completamento Campagna Vaccinale\" rel=\"noreferrer\" alt=\"Unità Completamento Campagna Vaccinale\">\n                Unità Completamento Campagna Vaccinale\n                </a>\n            </p>\n        </div>\n        <div className=\"col-12 col-md-4 d-flex justify-content-md-center justify-content-sm-start logo-section pt-2 pb-2 pr-sm-3\">\n            <img src=\"logo.svg\" height=\"4px\" alt=\"Logo\" className=\"logo pl-5 pr-2\" />\n            <p className=\"pt-2\">\n                <a href=\"http://www.salute.gov.it/portale/home.html\" className=\"text-decoration-none\" aria-label=\"Ministero della Salute\" rel=\"noreferrer\" alt=\"Ministero della Salute\">\n                Ministero della Salute\n                </a>\n            </p>\n        </div>\n        {/** TITLE + LOGO*/}\n        <div className=\"col-12 d-flex flex-column justify-content-center mainBanner\">\n          <div className=\"d-flex justify-content-center\">\n            <img src=\"Coccarda.svg\" alt=\"Logo\" height=\"150px\" className=\"main-logo\" />\n            <h1 className=\"large-title pl-2 pt-4 d-lg-none d-md-none d-xs-block\">Report Vaccini Anti COVID-19</h1> {/* Title Desktop*/}\n            <h1 className=\"large-title pl-2 pt-5 d-none d-md-block\">Report Vaccini Anti COVID-19</h1>  {/* Title Desktop*/}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const FooterBar = () => {\n    return (\n        <>\n            {/* <Footer small={false} theme=\"\" type=\"slim\">\n\n            </Footer> */}\n            <div className=\"row\">\n                <div className=\"col-12 text-center pt-5 pb-3\">I dati visualizzati sono disponibili all'indirizzo{\" \"}\n                    <a href=\"https://github.com/italia/covid19-opendata-vaccini\" alt=\"Repository Dati Covid Governo Italiano\">https://github.com/italia/covid19-opendata-vaccini</a>\n                </div>\n            </div>\n            <div className=\"row m-0 p-2 bg-footer\">\n                <div className=\"col-12 col-md-4 d-flex justify-content-md-center justify-content-sm-start logo-section pt-2 pb-2\">\n                    <img src=\"logo.svg\" height=\"4px\" alt=\"Logo\" className=\"logo pl-5 pr-2\" />\n                    <p className=\"pt-2\">\n                        <a href=\"http://www.governo.it\" aria-label=\"Presidenza del Consiglio dei Ministri\" className=\"text-decoration-none\" rel=\"noreferrer\" alt=\"Presidenza del Consiglio dei Ministri\">\n                            Presidenza del Consiglio dei Ministri\n                        </a>\n                    </p>\n                </div>\n                <div className=\"col-12 col-md-4 d-flex justify-content-md-center justify-content-sm-start logo-section pr-sm-0 pt-2 pb-2\">\n                    <img src=\"logo.svg\" height=\"4px\" alt=\"Logo\" className=\"logo pl-5 pr-2\" />\n                    <p className=\"pt-2\">\n                        <a className=\"text-decoration-none\" href=\"https://www.governo.it/it/dipartimenti/unit-il-completamento-della-campagna-vaccinale-e-ladozione-di-altre-misure-di-contrasto\" aria-label =\"Unità Completamento Campagna Vaccinale\" rel=\"noreferrer\" alt=\"Unità Completamento Campagna Vaccinale\">\n                            Unità Completamento Campagna Vaccinale\n                        </a>\n                    </p>\n                </div>\n                <div className=\"col-12 col-md-4 d-flex justify-content-md-center justify-content-sm-start logo-section pt-2 pb-2 pr-sm-3\">\n                    <img src=\"logo.svg\" height=\"4px\" alt=\"Logo\" className=\"logo pl-5 pr-2\" />\n                    <p className=\"pt-2\">\n                        <a href=\"http://www.salute.gov.it/portale/home.html\" className=\"text-decoration-none\" aria-label=\"Ministero della Salute\" rel=\"noreferrer\" alt=\"Ministero della Salute\">\n                            Ministero della Salute\n                        </a>\n                    </p>\n                </div>\n            </div>\n    </>\n    );\n};\n","import { React } from \"react\";\nimport moment from \"moment\";\n\nexport const Total = (props) => {\n    return (\n        <div className=\"h-100 w-100 my-3\">\n            <div className=\"mx-auto\">\n                <h6 className=\"text-center pb-4\">\n                    Report aggiornato al: {\" \"}\n                    {props.summary.timestamp && moment(props.summary.timestamp).format(\"DD-MM-YYYY HH:mm\")}\n                </h6>\n            </div>\n            <div className=\"d-flex flex-column justify-content-center\">\n                <div className=\"d-flex justify-content-center align-items-baseline\">\n                    <img src=\"meds.png\" alt=\"meds\" className=\"pl-2 pr-5\" />\n                    {\" \"}\n                    <div className=\"pl-2 mt-4 numbers\">{props.summary.tot?.toLocaleString('it')}</div>\n                </div>\n                <span className=\"border-divider mb-2\"></span>\n                <div className=\"d-flex justify-content-center\">\n                    {\" \"}\n                    <h3>Totale somministrazioni</h3>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import * as _ from 'lodash';\nexport const hideLoader = () => {\n  let loading = document.getElementById('loader-custom');\n  if (loading) loading.className = !loading.className.includes('d-none') ? loading.className + ' d-none' : loading.className;\n}\nexport const showLoader = () => {\n  let loading = document.getElementById('loader-custom');\n  if (loading) loading.className = loading.className.includes('d-none') ? loading.className.replace('d-none', '') : loading.className;\n}\nexport const sumDose = (acc, x) => acc + +x?.TML_DOSE_1 + +x?.TML_DOSE_2;\nexport const sumDoseXY = (y, z) => (acc, x) => acc + +x?.[y] + +x?.[z];\nexport const sumYear = (accumulator, currentValue) => accumulator + currentValue;\nexport const sumDoseX = (y) => (acc, x) => acc + +x?.[y];\nexport const maxX = (y) => (acc, x) => (x?.[y] > acc ? x?.[y] : acc);\nexport const age = [\"16-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80-89\", \"90+\"];\nexport const groupByAge = (array) => {\n  let _age;\n  if (Array.isArray(array) && array.length > 0) {\n    _age = age.map(el => {\n      let resMale = _.sum(array.filter(_el => _el.fascia_anagrafica.trim() === el).map(__el => __el.sesso_maschile));\n      let resFemale = _.sum(array.filter(_el => _el.fascia_anagrafica.trim() === el).map(__el => __el.sesso_femminile));\n      return { fascia_anagrafica: el, sesso_femminile: resFemale, sesso_maschile: resMale, totale: resMale + resFemale };\n    });\n  }\n  return _age;\n}\nexport const mapArrayByProp = (array, prop) => array.map((e) => e[prop]);\nexport const reduceSum = (array) => array.reduce(sumYear);\n\nexport const aggrBy = (p) => (acc, x) => {\n  let key = x[p];\n  if (!acc[key]) {\n    acc[key] = [];\n  }\n  acc[key].push(x);\n  return acc;\n};\nexport const filterBy = (y) => (z) => (x) => {\n  return x[y] === z;\n};\nexport const filterByArea = filterBy(\"area\");\nexport const filterByAreaITA = filterByArea(\"ITA\");\nexport const filterByAge = filterBy(\"TML_FASCIA_ETA\");\nexport const mapBy = (y) =>\n  Object.keys(y).map((x) => {\n    return { [x]: { sum: y[x].reduce(sumDose, 0) } };\n  });\nexport const mapByX = (y, z) =>\n  Object.keys(y).map((x) => {\n    return { [x]: y[x].reduce(sumDoseX(z), 0) };\n  });\nconst inverse = (obj) => {\n  let retobj = {};\n  for (const key in obj) {\n    retobj[obj[key]] = key;\n  }\n  return retobj;\n};\nexport const simulateClick = (id) => {\n  if (document.getElementById(id) && id) {\n    let clickEvt = new MouseEvent('click', {\n      'bubbles': true,\n      'cancelable': true\n    });\n    document.getElementById(id).dispatchEvent(clickEvt);\n  }\n}\nexport const replaceArea = (x) => ({ ...x, area: areaMapping[x.area], code: x.area });\nexport const areaMapping = {\n  ABR: \"Abruzzo\",\n  BAS: \"Basilicata\",\n  CAL: \"Calabria\",\n  CAM: \"Campania\",\n  EMR: \"Emilia-Romagna\",\n  FVG: \"Friuli-Venezia Giulia\",\n  LAZ: \"Lazio\",\n  LIG: \"Liguria\",\n  LOM: \"Lombardia\",\n  MAR: \"Marche\",\n  MOL: \"Molise\",\n  PAB: \"P.A. Bolzano\",\n  PAT: \"P.A. Trento\",\n  PIE: \"Piemonte\",\n  PUG: \"Puglia\",\n  SAR: \"Sardegna\",\n  SIC: \"Sicilia\",\n  TOS: \"Toscana\",\n  UMB: \"Umbria\",\n  VDA: \"Valle d'Aosta\",\n  VEN: \"Veneto\",\n};\nexport const areaMappingReverse = inverse(areaMapping);\n","import { sumDoseX, replaceArea } from \"./utils\";\nimport _ from \"lodash\";\nimport Moment from 'moment';\n\nconst baseURL = \"https://raw.githubusercontent.com/italia/covid19-opendata-vaccini/master/dati\";\n\nconst sommVaxSummaryURL                     = `${baseURL}/somministrazioni-vaccini-summary-latest.json`;\nconst sommVaxDetailURL                      = `${baseURL}/somministrazioni-vaccini-latest.json`;\nconst vaxSummaryURL                         = `${baseURL}/vaccini-summary-latest.json`;\nconst vaxLocationsURL                       = `${baseURL}/punti-somministrazione-tipologia.json`;\nconst lastUpdateURL                         = `${baseURL}/last-update-dataset.json`;\nconst supplierDoses                         = `${baseURL}/consegne-vaccini-latest.json`;\nconst plateaURL                             = `${baseURL}/platea.json`;\nconst plateaDoseAddizionaleBoosterURL       = `${baseURL}/platea-dose-addizionale-booster.json`;\nconst plateaDoseSecondBoosterURL            = `${baseURL}/platea-second-booster.json`;\nconst plateaDoseThirdBoosterURL             = `${baseURL}/platea-3a-booster.json`;\nconst guaritiURL                            = `${baseURL}/soggetti-guariti.json`;\nconst coperturaURL                          = `${baseURL}/copertura-vaccinale.json`;\n\nconst elaborate = (data) => {\n    /* creazioni delle costanti relative alle sorgenti dei file */\n    const dataSommVaxSummary                = data?.dataSommVaxSummary?.data;\n    const dataSommVaxDetail                 = data?.dataSommVaxDetail?.data;\n    const dataVaxSummary                    = data?.dataVaxSummary?.data;\n    const dataCopertura                     = data?.dataCopertura?.data;\n    const dataPlatea                        = data?.dataPlatea?.data;\n    const dataGuariti                       = data?.dataGuariti?.data;\n    const dataSupplierDoses                 = data?.dataSupplierDoses?.data;\n    const dataVaxLocations                  = data?.dataVaxLocations?.data;\n    const dataPlateaDoseAddizionaleBooster  = data?.dataPlateaDoseAddizionaleBooster?.data;\n    const dataPlateaSecondBooster           = data?.dataPlateaSecondBooster?.data;\n    const dataPlateaThirdBooster            = data?.dataPlateaThirdBooster?.data;\n\n    /* array statico contenente le fasce d'età relative agli over 60 */\n    const fasciaOver60 = ['60-69', '70-79', '80+'];\n\n    /* array statico contenente tutte le fasce d'età */\n    const fasciaEta = ['05-11', '12-19', '20-29', '30-39', '40-49', '50-59', '60-69', '70-79', '80+'];\n\n    /********************************************************************************\n     * ----------------------- DATA AGGIORNAMENTO REPORT ----------------------------\n     *******************************************************************************/\n\n    const timestamp = data.dataLastUpdate.ultimo_aggiornamento;\n\n\n    /********************************************************************************\n     * ------------------------- TOTALE SOMMINISTRAZIONI ----------------------------\n     *******************************************************************************/\n\n    const tot = dataSommVaxSummary?.filter((d) => d.area !== \"ITA\").reduce(sumDoseX(\"totale\"), 0);   \n\n    /********************************************************************************\n     * --------------------------- BOX DI RIEPILOGO DATI ----------------------------\n     *******************************************************************************/\n\n    /* creazione totalDoses, oggetto contenente la somma delle principali statistiche presenti in Databox.jsx */\n    let totalDoses = {\n        /* Copertura vaccinale covid-19 over 60 */\n        somministrazioni_over60:        _.sum(dataCopertura?.map((e) => fasciaOver60.includes(e?.fascia_anagrafica) ? e?.vaccinati : 0)), // totale somministrazioni\n        guarigioni_over60:              _.sum(dataCopertura?.map((e) => fasciaOver60.includes(e?.fascia_anagrafica) ? e?.guariti : 0)), // totale guarigioni\n        /* Ciclo Vaccinale Primario */\n        prima_dose:                     _.sum(dataSommVaxDetail?.map((e) => e?.eta === '05-11' ? 0 : e?.d1)), // somma delle prime dosi esclusa la fascia anagrafica 05-11\n        pregressa_infezione:            _.sum(dataSommVaxDetail?.map((e) => e?.eta === '05-11' ? 0 : e?.dpi)), // somma delle pregresse infezioni esclusa la fascia anagrafica 05-11\n        seconda_dose:                   _.sum(dataSommVaxDetail?.map((e) => e?.eta === '05-11' ? 0 : e?.d2)), // somma delle seconde dosi esclusa la fascia anagrafica 05-11\n        prima_dose_janssen:             _.sum(dataSommVaxDetail?.filter((e) => e.forn === \"Janssen\" && e?.eta !== '05-11').map((e) => e?.d1)), // somma delle somministrazioni a dose unica esclusa la fascia anagrafica 05-11\n        /* Somministrazione platea 5-11 anni */\n        prima_dose_baby:                _.sum(dataSommVaxDetail?.map((e) => e?.eta === '05-11' ? e?.d1 : 0)), // somma delle prime dosi per fascia anagrafica 05-11\n        seconda_dose_baby:              _.sum(dataSommVaxDetail?.map((e) => e?.eta === '05-11' ? e?.d2 : 0)), // somma delle seconde dosi per fascia anagrafica 05-11\n        pregressa_infezione_baby:       _.sum(dataSommVaxDetail?.map((e) => e?.eta === '05-11' ? e?.dpi : 0)), // somma delle pregresse infezioni per la fascia anagrafica 05-11\n        prima_dose_janssen_baby:        _.sum(dataSommVaxDetail?.filter((e) => e.forn === \"Janssen\" && e?.eta === '05-11').map((e) => e?.d1)), // somma delle somministrazioni a dose unica per la fascia anagrafica 05-11\n        /* Dose Addizionale/Booster */\n        dose_addizionale_booster:       _.sum(dataSommVaxDetail?.map((e) => e?.eta === '05-11' ? 0 : e?.db1)), // somma delle prime dosi booster per la fascia over 12\n        /* Seconda dose booster */\n        dose_second_booster:            _.sum(dataSommVaxDetail?.map((e) => e?.eta === '05-11' ? 0 : e?.db2)), // somma delle seconde dosi booster per la fascia over 12\n        /* Terza dose booster */\n        dose_third_booster:             _.sum(dataSommVaxDetail?.map((e) => e?.eta === '05-11' ? 0 : e?.db3)), // somma delle terze dosi booster per la fascia over 12\n        \n    };\n\n    /* calcolo delle platee */\n    let totalPlatea                         = _.sum(dataPlatea?.map((e) => (e?.eta !== '05-11') ? e?.totale_popolazione : 0)); // totale platea della popolazione over 12\n    let totalPlateaBaby                     = _.sum(dataPlatea?.map((e) => (e?.eta === '05-11') ? e?.totale_popolazione : 0)); // totale platea della popolazione 05-11\n    let totalPlateaOver60                   = _.sum(dataPlatea?.map((e) => fasciaOver60.includes(e?.eta) ? e?.totale_popolazione : 0)); // platea della popolazione over 60\n    let totalPlateaDoseAddizionaleBooster   = _.sum(dataPlateaDoseAddizionaleBooster?.map((e) => e?.totale_popolazione)); // totale platea dose booster\n    let totalPlateaDoseSecondBooster        = _.sum(dataPlateaSecondBooster?.map((e) => e?.totale_popolazione)); // totale platea seconda dose booster\n    let totalPlateaDoseThirdBooster         = _.sum(dataPlateaThirdBooster?.map((e) => e?.totale_popolazione)); // totale platea terza dose booster\n\n    /* calcolo dei guariti usato nei box iniziali di riepilogo e in Platea Guariti. Si tratta esclusivamente dei guariti per età superiore a 11 anni */\n    let totalGuaritiNotBaby                 = _.sum(dataGuariti?.map((e) => (e?.eta !== '05-11') ? e?.guariti_senza_somm : 0)); // totale dei guariti della popolazione over 12\n    let totalGuaritiDoppiaNotBaby           = _.sum(dataGuariti?.map((e) => (e?.eta !== '05-11') ? e?.guariti_post_somm : 0)); // totale dei guariti dopo che hanno completato il ciclo vaccinale primario della popolazione over 12\n    let totalGuaritiBoosterNotBaby          = _.sum(dataGuariti?.map((e) => (e?.eta !== '05-11') ? e?.guariti_post_1booster : 0)); // totale dei guariti dopo che hanno eseguito la dose booster della popolazione over 12\n    let totalGuaritiSecondBoosterNotBaby    = _.sum(dataGuariti?.map((e) => (e?.eta !== '05-11') ? e?.guariti_post_2booster : 0)); // totale dei guariti dopo che hanno eseguito la seconda dose booster della popolazione over 12\n    \n    /* calcolo dei guariti senza somministrazioni della fascia 05-11 previsto nel box Somministrazione platea 5-11 anni */\n    let totalGuaritiBaby                    = _.sum(dataGuariti?.map((e) => (e?.eta === '05-11') ? e?.guariti_senza_somm : 0)); // guariti senza somministrazioni per la fascia 05-11\n\n    let databoxContent = { // insieme di dati da passare al container\n        totalGuaritiNotBaby,\n        totalGuaritiDoppiaNotBaby,\n        totalGuaritiBoosterNotBaby,\n        totalGuaritiSecondBoosterNotBaby,\n        totalGuaritiBaby,\n        totalPlatea,\n        totalPlateaBaby,\n        totalPlateaDoseAddizionaleBooster,\n        totalPlateaDoseSecondBooster,\n        totalPlateaDoseThirdBooster,\n        totalPlateaOver60,\n    }\n\n     /********************************************************************************\n     * ----------------------- COPERTURA VACCINALE OVER 60 ---------------------------\n     * Istogramma + Mappa Italia\n     * Possibilità di click sulla regione (Mappa) o sulla fascia anagrafica (Istogramma)\n     *******************************************************************************/\n    let keyValueOver60 = { // oggetto contenente le label delle serie (la legenda)\n        \"guariti\"           : \"Guarigioni 120 gg\",\n        \"somministrazioni\"  : \"Somministrazioni 120 gg\",\n        \"totale\"            : \"Totale fascia\"\n    }\n    let keysOver60      = Object.keys(keyValueOver60); // array delle chiavi della serie\n    let over60          = Object.values(keyValueOver60); // array del nome delle serie (legenda)\n    let over60Color     = [\"#090d4d\", \"#244bb3\", \"#b6d5f4\" ]; // colori associati alle serie\n\n\n    // array con i valori da visualizzare nell'istogramma senza filtri.\n    let over60Data = _(dataCopertura).filter(e => fasciaOver60.includes(e.fascia_anagrafica)).groupBy(\"fascia_anagrafica\").map((items, rowAge) => { // raggruppo i valori in base alla fascia anagrafica\n        let keyAge = rowAge === '80+' ? 'Fascia over 80' : 'Fascia ' + rowAge; // keyAge è la fascia anagrafica, nel caso di 80+ non deve apparire 80+ ma over 80\n\n        let entryTmp = {\n            'guariti'           : _.sum(items.map(e => e.guariti)), // sommo i guariti per la fascia anagrafica corrente\n            'somministrazioni'  : _.sum(items.map(e => e.vaccinati)), // sommo le somministrazioni per la fascia anagrafica corrente\n            'totale'            : _.sum(dataPlatea.filter(e => e.eta === rowAge).map(e => e.totale_popolazione)) // totale platea per la fascia anagrafica\n        }\n\n        // siccome si tratta di un grafico a pile, devo calcolare lo scostamento con la serie precedente\n        return {\n            'label'             : keyAge,\n            'guariti'           : entryTmp['guariti'],\n            'somministrazioni'  : entryTmp['somministrazioni'] > entryTmp['guariti'] ? entryTmp['somministrazioni'] - entryTmp['guariti'] : 0,\n            'totale'            : entryTmp['totale'] > entryTmp['somministrazioni'] ? entryTmp['totale'] - entryTmp['somministrazioni'] : 0,\n        };\n    }).value().sort((a, b) => a.label < b.label ? 1 : -1); // ordino la lista dei guariti secondo la fascia anagrafica;\n\n    // array con i valori da visualizzare nella mappa (regione, totale percentuale) con e senza filtri\n    const over60MapData  = _(dataCopertura?.map(replaceArea)).filter(e => fasciaOver60.includes(e.fascia_anagrafica)).groupBy(\"code\").map((items, code) => { // raggruppo i valori in base alla regione\n        let entry = {\n            code        : code, // codice regione\n            area        : _.head(items)?.area, // nome esteso regione\n            totale      : _.sum(items.map(e => e.guariti + e.vaccinati))\n        }\n\n        let popolazione = _.sum(dataPlatea.filter(e => e.area === code && fasciaOver60.includes(e.eta)).map(e => e.totale_popolazione)) // totale platea per la fascia anagrafica over 60 nella regione corrente\n        entry['totale'] = entry['totale'] / popolazione * 100; // calcolo la percentuale del totale sulla platea\n\n        for (let rowAge of fasciaEta.filter(e => fasciaOver60.includes(e))) { // per tutte le fasce d'età over 60\n            let keyAge = rowAge === '80+' ? 'fascia_over_80' : 'fascia_' + rowAge;\n            entry[keyAge] = _.sum(items.filter(e => rowAge === e.fascia_anagrafica).map(e => e.guariti + e.vaccinati)); // sommo i guariti e i vaccinati della fascia anagrafica corrente in quella determinata regione\n            let popolazioneFascia = _.sum(dataPlatea.filter(e => e.area === code && e.eta === rowAge).map(e => e.totale_popolazione)); // calcolo la platea della fascia anagrafica corrente in quella determinata regione\n            entry[keyAge] = entry[keyAge] / popolazioneFascia * 100; // calcolo la percentuale\n        }\n        \n        return entry;\n    }).value();\n\n    // array con i valori da visualizzare nell'istogramma con il filtro regione attivo\n    const over60RegionData  = {};\n    _(dataCopertura?.map(replaceArea)).filter(e => fasciaOver60.includes(e.fascia_anagrafica)).groupBy(\"code\").map((items, code) => { // raggruppo i valori in base alla regione\n        over60RegionData[code] = _(items?.map(replaceArea)).groupBy(\"fascia_anagrafica\").map((subItems, rowAge) => { // raggruppo i valori in base all'età\n            let keyAge = rowAge === '80+' ? 'Fascia over 80' : 'Fascia ' + rowAge; // keyAge è la fascia anagrafica, nel caso di 80+ non deve apparire 80+ ma over 80\n\n            let entryTmp = {\n                'guariti'           : _.sum(subItems.map(e => e.guariti)), // sommo i guariti\n                'somministrazioni'  : _.sum(subItems.map(e => e.vaccinati)), // sommo le somministrazioni\n                'totale'            : _.sum(dataPlatea.filter(e => e.eta === rowAge && e.area === code).map(e => e.totale_popolazione)) // totale platea per la fascia anagrafica corrente e la regione corrente\n            }\n\n            // siccome si tratta di un grafico a pile, devo calcolare lo scostamento con la serie precedente\n            return {\n                'label'             : keyAge,\n                'guariti'           : entryTmp['guariti'],\n                'somministrazioni'  : entryTmp['somministrazioni'] > entryTmp['guariti'] ? entryTmp['somministrazioni'] - entryTmp['guariti'] : 0,\n                'totale'            : entryTmp['totale'] > entryTmp['somministrazioni'] ? entryTmp['totale'] - entryTmp['somministrazioni'] : 0\n            };\n        }).value().sort((a, b) => a.label < b.label ? 1 : -1); // ordino la lista secondo la fascia anagrafica;\n        return items;\n    }).value();\n\n    let over60Content = { // insieme di dati da passare al container\n        over60,\n        keyValueOver60,\n        keysOver60,\n        over60Color,\n        over60Data,\n        over60RegionData,\n        over60MapData,\n    }\n\n    /********************************************************************************\n     * ---------- DISTRIBUZIONE SOMMINISTRAZIONI RISPETTO ALLE CONSEGNE -------------\n     * Tabella + Mappa Italia\n     * Possibilità di click sulla regione (Mappa)\n     *******************************************************************************/\n\n    const deliverySummary       = dataVaxSummary?.map(replaceArea);\n    const deliveredByArea       = _.groupBy(deliverySummary, \"code\");\n    /* Array di oggetti JSON aventi code, area, dosi_consegnate, dosi_somministrate e percentuale_somministrazione */\n    const totalDeliverySummary  = _(dataSommVaxDetail?.map(replaceArea)).groupBy(\"code\").map((items, code) => { // raggruppo i valori in base alla regione\n        const details = _.head(deliveredByArea[code]);\n        return {\n            code                            : code, // codice regione\n            area                            : _.head(items)?.area, // nome esteso regione\n            dosi_consegnate                 : details.dosi_consegnate || 0, // dosi consegnate\n            dosi_somministrate              : details.dosi_somministrate || 0, // dosi somministrate\n            percentuale_somministrazione    : details.percentuale_somministrazione || 0, // percentuale somministrazioni rispetto alle consegnate\n        };\n    }).value();\n\n    /********************************************************************************\n     * --------------------------- GRAFICO PLATEA GUARITI ---------------------------\n     * Istogramma a pile + Mappa Italia\n     * Possibilità di click sulla regione (Mappa) o sulla fascia anagrafica (Istogramma)\n     *******************************************************************************/ \n\n    /* totale di tutti i guariti, usato nel box del totale nella sezione Platea Guariti */\n    let totalGuaritiHealedSection           = _.sum(dataGuariti?.map((e) => e?.guariti_senza_somm + e?.guariti_post_somm + e?.guariti_post_1booster + e?.guariti_post_2booster));\n\n    let keyValueHealed  = { // oggetto contenente le label delle serie (la legenda)\n        \"senza\"     : \"Guariti senza somministrazione da al massimo 6 mesi\",\n        \"post\"      : \"Guariti post 2ª dose/unica dose da al massimo 4 mesi\",\n        \"booster\"   : \"Guariti post 1ª dose booster da al massimo 6 mesi\",\n        \"2booster\"  : \"Guariti post 2ª dose booster da al massimo 6 mesi\"\n    }\n    let keysHealed      = Object.keys(keyValueHealed); // array delle chiavi della serie\n    let healed          = Object.values(keyValueHealed); // array del nome delle serie (legenda)\n    let healedColor     = [\"#b6d5f4\", \"#0a5dbb\", \"#244bb3\", \"#090d4d\" ]; // colori associati alle serie\n\n    // array con i valori da visualizzare nell'istogramma senza filtri.\n    let healedData = _(dataGuariti).groupBy(\"eta\").map((items, rowAge) => { // raggruppo i valori in base alla fascia anagrafica\n        let keyAge = rowAge === '80+' ? 'Fascia over 80' : 'Fascia ' + rowAge; // keyAge è la fascia anagrafica, nel caso di 80+ non deve apparire 80+ ma over 80\n\n        let entryTmp = {\n            'senza'         : _.sum(items.map(e => e.guariti_senza_somm)), // sommo i guariti senza somministrazioni per la fascia anagrafica corrente\n            'post'          : _.sum(items.map(e => e.guariti_post_somm)), // sommo i guariti dopo aver completato il ciclo vaccinale per la fascia anagrafica corrent\n            'booster'       : _.sum(items.map(e => e.guariti_post_1booster)), // sommo i guariti dopo la prima dose booster per la fascia anagrafica corrent\n            '2booster'      : _.sum(items.map(e => e.guariti_post_2booster)) // sommo i guariti dopo la seconda dose booster per la fascia anagrafica corrente\n        }\n\n        // siccome si tratta di un grafico a pile, devo calcolare lo scostamento con la serie precedente\n        return {\n            'label'         : keyAge,\n            'senza'         : entryTmp['senza'],\n            'post'          : entryTmp['post'] > entryTmp['senza'] ? entryTmp['post'] - entryTmp['senza'] : 0,\n            'booster'       : entryTmp['booster'] > entryTmp['post'] ? entryTmp['booster'] - entryTmp['post'] : 0,\n            '2booster'      : entryTmp['2booster'] > entryTmp['booster'] ? entryTmp['2booster'] - entryTmp['booster'] : 0,\n            'Totale'        : entryTmp['senza'] + entryTmp['post'] + entryTmp['booster'] + entryTmp['2booster'] // somma di tutti i guariti\n        };\n    }).value().sort((a, b) => a.label < b.label ? 1 : -1); // ordino la lista dei guariti secondo la fascia anagrafica;\n\n    // array con i valori da visualizzare nella mappa (regione, totole guariti e totale guariti per fascia anagrafica) con e senza filtri\n    const healedMapData  = _(dataGuariti?.map(replaceArea)).groupBy(\"code\").map((items, code) => { // raggruppo i valori in base alla regione\n        let entry = {\n            code        : code, // codice regione\n            area        : _.head(items)?.area, // nome esteso regione\n            guariti     : _.sum(items.map(e => e.guariti_senza_somm + e.guariti_post_somm + e.guariti_post_1booster + e.guariti_post_2booster)) // sommo tutti i guariti della regione\n        }\n\n        for (let rowAge of fasciaEta) { // per tutte le fasce d'età over 60\n            let keyAge      = rowAge === '80+' ? 'fascia_over_80' : 'fascia_' + rowAge;\n            entry[keyAge]   = _.sum(items.filter(e => rowAge === e.eta).map(e => e.guariti_senza_somm + e.guariti_post_somm + e.guariti_post_1booster + e.guariti_post_2booster)); // sommo i guariti di ogni fascia anagrafica in quella determinata regione\n        }\n        \n        return entry;\n    }).value();\n\n    // array con i valori da visualizzare nell'istogramma con il filtro regione attivo\n    const healedRegionData  = {};\n    _(dataGuariti?.map(replaceArea)).groupBy(\"code\").map((items, code) => { // raggruppo i valori in base alla regione\n        healedRegionData[code] = _(items?.map(replaceArea)).groupBy(\"eta\").map((subItems, rowAge) => { // raggruppo i valori in base all'età\n            let keyAge = rowAge === '80+' ? 'Fascia over 80' : 'Fascia ' + rowAge; // keyAge è la fascia anagrafica, nel caso di 80+ non deve apparire 80+ ma over 80\n\n            let entryTmp = {\n                'senza'         : _.sum(subItems.map(e => e.guariti_senza_somm)), // sommo i guariti senza somministrazioni per la fascia anagrafica corrente\n                'post'          : _.sum(subItems.map(e => e.guariti_post_somm)), // sommo i guariti dopo aver completato il ciclo vaccinale per la fascia anagrafica corrent\n                'booster'       : _.sum(subItems.map(e => e.guariti_post_1booster)), // sommo i guariti dopo la prima dose booster per la fascia anagrafica corrent\n                '2booster'      : _.sum(subItems.map(e => e.guariti_post_2booster)) // sommo i guariti dopo la seconda dose booster per la fascia anagrafica corrente\n            }\n\n            // siccome si tratta di un grafico a pile, devo calcolare lo scostamento con la serie precedente\n            return {\n                'label'         : keyAge,\n                'senza'         : entryTmp['senza'],\n                'post'          : entryTmp['post'] > entryTmp['senza'] ? entryTmp['post'] - entryTmp['senza'] : 0,\n                'booster'       : entryTmp['booster'] > entryTmp['post'] ? entryTmp['booster'] - entryTmp['post'] : 0,\n                '2booster'      : entryTmp['2booster'] > entryTmp['booster'] ? entryTmp['2booster'] - entryTmp['booster'] : 0,\n                'Totale'        : entryTmp['senza'] + entryTmp['post'] + entryTmp['booster'] + entryTmp['2booster'] // somma di tutti i guariti\n            };\n        }).value().sort((a, b) => a.label < b.label ? 1 : -1); // ordino la lista dei guariti secondo la fascia anagrafica;\n        return items;\n    }).value();\n\n    let healedContent = { // insieme di dati da passare al container\n        totalGuaritiHealedSection,\n        healed,\n        keyValueHealed,\n        keysHealed,\n        healedColor,\n        healedData,\n        healedRegionData,\n        healedMapData\n    }\n\n\n    /********************************************************************************\n     * ----------- GRAFICO ANDAMENTO SETTIMANALE DELLE SOMMINISTRAZIONI -------------\n     * Istogramma a pile\n     *******************************************************************************/ \n\n    let spectrum = [\"#0f69c9\", \"#4d99eb\", \"#77b2f2\", \"#b5d4f5\", \"#d1e0f0\", \"#edf2f7\", \"#ffffff\"]; // sono presenti più colori del necessario per gestire eventuali nuovi fornitori\n    let suppliersColor = {}; // colori associati alle serie\n    let suppliers = []; // lista dinamica dei fornitori di vaccini\n\n    for (let row of data.dataSommVaxDetail.data) { // aggiungo i fornitori evitando duplicazioni\n        if (!suppliers.includes(row.forn)) {\n            suppliers.push(row.forn);\n        }\n    }\n\n    // sposto Pfizer Pediatrico in ultima posizione, rimuovendono dalla lista ed inserendolo in coda\n    var indexOfPediatrico = suppliers.indexOf('Pfizer Pediatrico');\n    if (indexOfPediatrico !== -1) {\n        suppliers.splice(indexOfPediatrico, 1);\n        suppliers.push('Pfizer Pediatrico');\n    }\n\n    // assegno i colori ai fornitori\n    for (let rowFornitore of suppliers) {\n        if ((Object.keys(suppliersColor).length - 1) < spectrum.length) {\n            suppliersColor[rowFornitore] = spectrum[Object.keys(suppliersColor).length];\n        }\n        else {\n            suppliersColor[rowFornitore] = \"#ffffff\";\n        }\n    }\n\n    // calcolo le diverse settimane partire dal 21/12/2020\n    let weeksMappingOptimation = {};\n    var index = 0; // indice della settimana a partire dal 21/12/2020\n\n    let suppliersWeek = [];\n    var date = new Date('2020-12-21'); // data di partenza delle somministrazioni che cambierò ad ogni iterazione\n    do {\n        let entry = {\n            label: Moment(date).format('DD/MM'), // giorno e mese del lunedi della settimana\n            from: Moment(date).format('YYYY-MM-DD'), // data di inizio settimana\n            labelfrom: Moment(date).format('DD/MM'), // etichetta inizio settimana\n            to: Moment(new Date(date.getTime() + 6 * 86400000)).format('YYYY-MM-DD'), // data fine settimana\n            labelto: Moment(new Date(date.getTime() + 6 * 86400000)).format('DD/MM'), // etichetta fine settimana\n            total: 0 // somministrazioni nella settimana\n        };\n\n        for (let supplier of suppliers) {\n            entry[supplier] = 0; // somministrazioni del fornitore nella settimana inizializzato a zero\n        }\n\n        // definisco ogni giorno in quale settimana si trova\n        weeksMappingOptimation[Moment(date).format('YYYY-MM-DD')] = index;\n        weeksMappingOptimation[Moment(new Date(date.getTime() + 1 * 86400000)).format('YYYY-MM-DD')] = index;\n        weeksMappingOptimation[Moment(new Date(date.getTime() + 2 * 86400000)).format('YYYY-MM-DD')] = index;\n        weeksMappingOptimation[Moment(new Date(date.getTime() + 3 * 86400000)).format('YYYY-MM-DD')] = index;\n        weeksMappingOptimation[Moment(new Date(date.getTime() + 4 * 86400000)).format('YYYY-MM-DD')] = index;\n        weeksMappingOptimation[Moment(new Date(date.getTime() + 5 * 86400000)).format('YYYY-MM-DD')] = index;\n        weeksMappingOptimation[Moment(new Date(date.getTime() + 6 * 86400000)).format('YYYY-MM-DD')] = index;\n        index++;\n\n        suppliersWeek.push(entry);\n\n        date = new Date(date.getTime() + 7 * 86400000); // aggiungo 7 gorni\n    } while(date <= new Date());\n\n    // aggiorno i totali per ogni fornitore e per l'intera settimana\n    for (let row of data.dataSommVaxDetail.data) { // per ogni valore presente nel JSON\n        let index = weeksMappingOptimation[Moment(new Date(row.data)).format('YYYY-MM-DD')]; // ottengo l'indice di quale settimana fa parte il giorno corrente\n        let week = suppliersWeek[index];\n\n        // Totale Somministrazioni Settimanale ottenuto sommando le somministrazioni di maschi e femmine\n        week.total += (row.f + row.m );\n\n        // Totale Somministrazioni Settimanale per fornitore sommando le somministrazioni di maschi e femmine\n        week[row.forn] += (row.f + row.m );\n    }\n\n    let weekContent = { // insieme di dati da passare al container\n        suppliersColor,\n        suppliers,\n        suppliersWeek\n    }\n\n    /********************************************************************************\n     * --------------- SOMMINISTRAZIONI PER FASCIA D'ETA' - DOSE --------------------\n     * Istogramma + Mappa Italia\n     * Possibilità di click sulla regione (Mappa) o sulla fascia anagrafica (Istogramma)\n     *******************************************************************************/\n    let keyValueDoses = { // oggetto contenente le label delle serie (la legenda)\n        \"third_booster\": \"3ª dose Booster \",\n        \"second_booster\": \"2ª dose Booster \",\n        \"addizionale\": \"1ª dose Booster\",\n        \"seconda\": \"2ª dose/unica dose\",\n        \"prima\": \"1ª dose\",\n        \"totale\": \"Totale fascia\"\n    }\n    let keysDosesAges      = Object.keys(keyValueDoses); // array delle chiavi della serie\n    let dosesAges          = Object.values(keyValueDoses); // array del nome delle serie (legenda)\n    let dosesAgesColor     = [\"#090d4d\", \"#0b34a3\", \"#244bb3\", \"#0a5dbb\", \"#3073cf\", \"#548bd6\", \"#b6d5f4\"]; // colori associati alle serie\n\n\n    // array con i valori da visualizzare nell'istogramma senza filtri.\n    let dosesAgesData = _(dataSommVaxDetail).map(e => { // poichè solo in questo file è prevista la fascia 90+ e 80-89, sostituisco 90+ e 80-89 con 80+\n            if (e.eta === '90+' || e.eta === '80-89') {\n                e.eta = '80+';\n            }\n            return e;\n        }).groupBy(\"eta\").map((items, rowAge) => { // raggruppo i valori in base alla fascia anagrafica\n        let keyAge = rowAge === '80+' ? 'Fascia over 80' : 'Fascia ' + rowAge; // keyAge è la fascia anagrafica, nel caso di 80+ non deve apparire 80+ ma over 80\n\n        let entryTmp = {\n            'prima'                 : _.sum(items.filter(e => e.forn !== 'Janssen').map(e => e.d1)), // sommo tutte le prime dosi per vaccini diversi da Janssen\n            'seconda'               : _.sum(items.filter(e => e.forn !== 'Janssen').map(e => e.d2)) + _.sum(items.filter(e => e.forn === 'Janssen').map(e => e.d1)) + _.sum(items.map(e => e.dpi)), // sommo le prime dosi Janssen, le seconde dosi non Janssen e le pregresse infezioni\n            'addizionale'           : _.sum(items.map(e => e.db1)), // sommo le dosi addizionali\n            'second_booster'        : _.sum(items.map(e => e.db2)), // sommo le seconde dosi booster\n            'third_booster'         : _.sum(items.map(e => e.db3)), // sommo le terze dosi booster,\n            'Totale platea'         : _.sum(dataPlatea.filter(e => e.eta === rowAge).map(e => e.totale_popolazione)) // totale platea per la fascia anagrafica corrente\n        }\n\n        // siccome si tratta di un grafico a pile, devo calcolare lo scostamento con la serie precedente\n        return {\n            'label'                 : keyAge,\n            'third_booster'         : entryTmp['third_booster'],\n            'second_booster'        : entryTmp['second_booster'] > entryTmp['third_booster'] ? entryTmp['second_booster'] - entryTmp['third_booster'] : 0,\n            'addizionale'           : entryTmp['addizionale'] > entryTmp['second_booster'] ? entryTmp['addizionale'] - entryTmp['second_booster'] : 0,\n            'seconda'               : entryTmp['seconda'] > entryTmp['addizionale'] ? entryTmp['seconda'] - entryTmp['addizionale'] : 0,\n            'prima'                 : entryTmp['prima'] > entryTmp['seconda'] ? entryTmp['prima'] - entryTmp['seconda'] : 0,\n            'totale'                : entryTmp['Totale platea'] > entryTmp['prima'] ? entryTmp['Totale platea'] - entryTmp['prima'] : 0,\n            'Totale platea'         : entryTmp['Totale platea'],\n        };\n    }).value().sort((a, b) => a.label < b.label ? 1 : -1); // ordino la lista dei guariti secondo la fascia anagrafica;\n\n\n    // array con i valori da visualizzare nella mappa (regione, totale percentuale) con e senza filtri\n    const secondDosesMapData  = _(dataSommVaxDetail?.map(replaceArea)).map(e => { // poichè solo in questo file è prevista la fascia 90+ e 80-89, sostituisco 90+ e 80-89 con 80+\n            if (e.eta === '90+' || e.eta === '80-89') {\n                e.eta = '80+';\n            }\n            return e;\n        }).groupBy(\"code\").map((items, code) => { // raggruppo i valori in base alla regione\n        let entry = {\n            code                : code, // codice regione\n            area                : _.head(items)?.area, // nome esteso regione\n            somministrazioni    : _.sum(items.filter(e => e.forn !== 'Janssen').map(e => e.d2)) + _.sum(items.filter(e => e.forn === 'Janssen').map(e => e.d1)) + _.sum(items.map(e => e.dpi)) // sommo solo chi ha completato il ciclo vaccinale\n        }\n\n        let popolazione = _.sum(dataPlatea.filter(e => e.area === code).map(e => e.totale_popolazione)) // totale platea nella regione corrente        \n        entry['somministrazioni'] = entry['somministrazioni'] / popolazione * 100; // calcolo la percentuale del totale sulla platea\n\n        for (let rowAge of fasciaEta) { // per tutte le fasce d'età\n            let keyAge = rowAge === '80+' ? 'fascia_over_80' : 'fascia_' + rowAge;\n            entry[keyAge]   = _.sum(items.filter(e => rowAge === e.eta && e.forn !== 'Janssen').map(e => e.d2)) + _.sum(items.filter(e => rowAge === e.eta && e.forn === 'Janssen').map(e => e.d1)) + _.sum(items.filter(e => rowAge === e.eta).map(e => e.dpi)); // sommo chi ha completato il ciclo vaccinale di quella fascia anagrafica\n            let popolazioneFascia = _.sum(dataPlatea.filter(e => e.area === code && e.eta === rowAge).map(e => e.totale_popolazione)); // calcolo la platea della fascia anagrafica corrente in quella determinata regione\n            entry[keyAge] = entry[keyAge] / popolazioneFascia * 100; // calcolo la percentuale\n        }\n        \n        return entry;\n    }).value();\n\n    // array con i valori da visualizzare nell'istogramma con il filtro regione attivo\n    const dosesAgesRegionData  = {};\n    _(dataSommVaxDetail?.map(replaceArea)).map(e => { // poichè solo in questo file è prevista la fascia 90+ e 80-89, sostituisco 90+ e 80-89 con 80+\n        if (e.eta === '90+' || e.eta === '80-89') {\n            e.eta = '80+';\n        }\n        return e;\n    }).groupBy(\"code\").map((items, code) => { // raggruppo i valori in base alla regione\n        dosesAgesRegionData[code] = _(items?.map(replaceArea)).groupBy(\"eta\").map((subItems, rowAge) => { // raggruppo i valori in base all'età\n            let keyAge = rowAge === '80+' ? 'Fascia over 80' : 'Fascia ' + rowAge; // keyAge è la fascia anagrafica, nel caso di 80+ non deve apparire 80+ ma over 80\n\n            let entryTmp = {\n                'prima'                 : _.sum(subItems.filter(e => e.forn !== 'Janssen').map(e => e.d1)), // sommo tutte le prime dosi per vaccini diversi da Janssen\n                'seconda'               : _.sum(subItems.filter(e => e.forn !== 'Janssen').map(e => e.d2)) + _.sum(subItems.filter(e => e.forn === 'Janssen' && e.area === code).map(e => e.d1)) + _.sum(subItems.filter(e => e.area === code).map(e => e.dpi)), // sommo le prime dosi Janssen, le seconde dosi non Janssen e le pregresse infezioni\n                'addizionale'           : _.sum(subItems.map(e => e.db1)), // sommo le dosi addizionali\n                'second_booster'        : _.sum(subItems.map(e => e.db2)), // sommo le seconde dosi booster\n                'third_booster'         : _.sum(subItems.map(e => e.db3)), // sommo le terze dosi booster,\n                'Totale platea'         : _.sum(dataPlatea.filter(e => e.eta === rowAge && e.area === code).map(e => e.totale_popolazione)) // totale platea per la fascia anagrafica corrente\n            }\n\n            // siccome si tratta di un grafico a pile, devo calcolare lo scostamento con la serie precedente\n            return {\n                'label'                 : keyAge,\n                'third_booster'         : entryTmp['third_booster'],\n                'second_booster'        : entryTmp['second_booster'] > entryTmp['third_booster'] ? entryTmp['second_booster'] - entryTmp['third_booster'] : 0,\n                'addizionale'           : entryTmp['addizionale'] > entryTmp['second_booster'] ? entryTmp['addizionale'] - entryTmp['second_booster'] : 0,\n                'seconda'               : entryTmp['seconda'] > entryTmp['addizionale'] ? entryTmp['seconda'] - entryTmp['addizionale'] : 0,\n                'prima'                 : entryTmp['prima'] > entryTmp['seconda'] ? entryTmp['prima'] - entryTmp['seconda'] : 0,\n                'totale'                : entryTmp['Totale platea'] > entryTmp['prima'] ? entryTmp['Totale platea'] - entryTmp['prima'] : 0,\n                'Totale platea'         : entryTmp['Totale platea'],\n            };\n        }).value().sort((a, b) => a.label < b.label ? 1 : -1); // ordino la lista secondo la fascia anagrafica;\n        return items;\n    }).value();\n\n    let agedosesContent = { // insieme di dati da passare al container\n        keyValueDoses,\n        keysDosesAges,\n        dosesAges,\n        dosesAgesColor,\n        dosesAgesData,\n        dosesAgesRegionData,\n        secondDosesMapData  \n    }\n\n    /********************************************************************************\n     * ------------------- DISTRIBUZIONE VACCINI PER FORNITORE ----------------------\n     * Istogramma\n     * Possibilità di click sulle barre\n     *******************************************************************************/ \n\n    let totalSuplier        = _.sum(dataSupplierDoses.map((e) => e?.numero_dosi)); // calcolo numero totale di vaccini distribuiti\n    const groups            = _.groupBy(dataSupplierDoses, \"forn\"); // raggruppo la distribuzione dei vaccini per fornitore\n    let allDosesSupplier    = Object.keys(groups).map((k) => { // per ogni fornitore raggruppato effettuo la somma dei vaccini distribuiti\n        let groupByKey      = groups[k].map((group) => group.numero_dosi);\n        let sumTotalDoses   = _.sum(groupByKey);\n        return { totale: sumTotalDoses, fornitore: k, allDoses: groups[k] };\n    }).sort((a, b) => a.totale < b.totale ? 1 : -1); // ordino la lista dei fornitori secondo le quantità fornite in ordine decrescente\n\n    /********************************************************************************\n     * ---------- PRINCIPALI PUNTI DI SOMMINISTRAZIONE PER REGIONE ------------------\n     * Tabella + Mappa Italia\n     * Possibilità di click sulla tabella\n     *******************************************************************************/ \n\n    const locations         = dataVaxLocations?.map(replaceArea); // dati per la tabella .map(replaceArea) sostituisce la sigla della regione con il nome completo\n    // array con i valori da visualizzare nella mappa\n    const locationsByRegion = _(dataVaxLocations?.map(replaceArea)).groupBy(\"area\").map((items, area) => { // raggruppo i valori in base alla regione\n        return { area: area, locations: items.length }; // locations è il numero di punti di somministrazione per quella regione (numero che appare al click sulla regione)\n    }).value();\n\n    /********************************************************************************\n     * ------------------------------ FINE CALCOLI ----------------------------------\n     * Restituzione dei dati da rendere disponibili all'esterno\n     *******************************************************************************/\n\n    const aggr = {\n        timestamp,\n        tot,\n        databoxContent,\n        over60Content,\n        healedContent,\n        weekContent,\n        agedosesContent,\n        deliverySummary,\n        locations,\n        locationsByRegion,\n        totalDeliverySummary,\n        totalDoses,\n        allDosesSupplier,\n        totalSuplier,  \n    };\n    return aggr;\n};\n\n\n/********************************************************************************\n * ---------------------- LETTURA DATI DA SORGENTI JSON -------------------------\n * Istogramma\n * Possibilità di click sulle barre\n *******************************************************************************/ \n\nexport const loadData = async () => {\n    const [\n        resSommVaxSummary,\n        resSommVaxDetail,\n        resVaxSummary,\n        resVaxLocations,\n        resLastUpdate,\n        resSupplierDoses,\n        resPlatea,\n        resPlateaDoseAddizionaleBooster,\n        resPlateaDoseSecondBooster,\n        resPlateaDoseThirdBooster,\n        resGuariti,\n        resCopertura\n    ] = await Promise.all([\n        fetch(sommVaxSummaryURL),\n        fetch(sommVaxDetailURL),\n        fetch(vaxSummaryURL),\n        fetch(vaxLocationsURL),\n        fetch(lastUpdateURL),\n        fetch(supplierDoses),\n        fetch(plateaURL),\n        fetch(plateaDoseAddizionaleBoosterURL),\n        fetch(plateaDoseSecondBoosterURL),\n        fetch(plateaDoseThirdBoosterURL),\n        fetch(guaritiURL),\n        fetch(coperturaURL)\n    ]);\n\n    const [\n        dataSommVaxSummary,\n        dataSommVaxDetail,\n        dataVaxSummary,\n        dataVaxLocations,\n        dataLastUpdate,\n        dataSupplierDoses,\n        dataPlatea,\n        dataPlateaDoseAddizionaleBooster,\n        dataPlateaSecondBooster,\n        dataPlateaThirdBooster,\n        dataGuariti,\n        dataCopertura\n    ] = await Promise.all([\n        resSommVaxSummary.json(),\n        resSommVaxDetail.json(),\n        resVaxSummary.json(),\n        resVaxLocations.json(),\n        resLastUpdate.json(),\n        resSupplierDoses.json(),\n        resPlatea.json(),\n        resPlateaDoseAddizionaleBooster.json(),\n        resPlateaDoseSecondBooster.json(),\n        resPlateaDoseThirdBooster.json(),\n        resGuariti.json(),\n        resCopertura.json()\n    ]);\n\n    return {\n        ...elaborate({\n            dataSommVaxSummary,\n            dataSommVaxDetail,\n            dataVaxSummary,\n            dataLastUpdate,\n            dataVaxLocations,\n            dataSupplierDoses,\n            dataPlatea,\n            dataPlateaDoseAddizionaleBooster,\n            dataPlateaSecondBooster,\n            dataPlateaThirdBooster,\n            dataGuariti,\n            dataCopertura\n        })\n    };\n};\n","/* eslint-disable */\nimport * as jQuery from \"jquery\";\n\n(function() {\n \n    /*\n     * Natural Sort algorithm for Javascript - Version 0.7 - Released under MIT license\n     * Author: Jim Palmer (based on chunking idea from Dave Koelle)\n     * Contributors: Mike Grier (mgrier.com), Clint Priest, Kyle Adams, guillermo\n     * See: http://js-naturalsort.googlecode.com/svn/trunk/naturalSort.js\n     */\n    function naturalSort (a, b, html) {\n        var re = /(^-?[0-9]+(\\.?[0-9]*)[df]?e?[0-9]?%?$|^0x[0-9a-f]+$|[0-9]+)/gi,\n            sre = /(^[ ]*|[ ]*$)/g,\n            dre = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,\n            hre = /^0x[0-9a-f]+$/i,\n            ore = /^0/,\n            htmre = /(<([^>]+)>)/ig,\n            // convert all to strings and trim()\n            x = a.toString().replace(sre, '') || '',\n            y = b.toString().replace(sre, '') || '';\n            // remove html from strings if desired\n            if (!html) {\n                x = x.replace(htmre, '');\n                y = y.replace(htmre, '');\n            }\n            // chunk/tokenize\n        var xN = x.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\n            yN = y.replace(re, '\\0$1\\0').replace(/\\0$/,'').replace(/^\\0/,'').split('\\0'),\n            // numeric, hex or date detection\n            xD = parseInt(x.match(hre), 10) || (xN.length !== 1 && x.match(dre) && Date.parse(x)),\n            yD = parseInt(y.match(hre), 10) || xD && y.match(dre) && Date.parse(y) || null;\n     \n        // first try and sort Hex codes or Dates\n        if (yD) {\n            if ( xD < yD ) {\n                return -1;\n            }\n            else if ( xD > yD ) {\n                return 1;\n            }\n        }\n     \n        // natural sorting through split numeric strings and default strings\n        for(var cLoc=0, numS=Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {\n            // find floats not starting with '0', string or 0 if not defined (Clint Priest)\n            var oFxNcL = !(xN[cLoc] || '').match(ore) && parseFloat(xN[cLoc], 10) || xN[cLoc] || 0;\n            var oFyNcL = !(yN[cLoc] || '').match(ore) && parseFloat(yN[cLoc], 10) || yN[cLoc] || 0;\n            // handle numeric vs string comparison - number < string - (Kyle Adams)\n            if (isNaN(oFxNcL) !== isNaN(oFyNcL)) {\n                return (isNaN(oFxNcL)) ? 1 : -1;\n            }\n            // rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'\n            else if (typeof oFxNcL !== typeof oFyNcL) {\n                oFxNcL += '';\n                oFyNcL += '';\n            }\n            if (oFxNcL < oFyNcL) {\n                return -1;\n            }\n            if (oFxNcL > oFyNcL) {\n                return 1;\n            }\n        }\n        return 0;\n    }\n     \n    jQuery.extend( jQuery.fn.dataTableExt.oSort, {\n        \"natural-asc\": function ( a, b ) {\n            return naturalSort(a,b,true);\n        },\n     \n        \"natural-desc\": function ( a, b ) {\n            return naturalSort(a,b,true) * -1;\n        },\n     \n        \"natural-nohtml-asc\": function( a, b ) {\n            return naturalSort(a,b,false);\n        },\n     \n        \"natural-nohtml-desc\": function( a, b ) {\n            return naturalSort(a,b,false) * -1;\n        },\n     \n        \"natural-ci-asc\": function( a, b ) {\n            a = a.toString().toLowerCase();\n            b = b.toString().toLowerCase();\n     \n            return naturalSort(a,b,true);\n        },\n     \n        \"natural-ci-desc\": function( a, b ) {\n            a = a.toString().toLowerCase();\n            b = b.toString().toLowerCase();\n     \n            return naturalSort(a,b,true) * -1;\n        }\n    } );\n     \n    }());","import { React, useEffect } from \"react\";\nimport * as $ from \"jquery\";\nimport DataTable from \"datatables.net\";\nimport \"../naturalSortAlgorithm\";\n\n\n$.DataTable = DataTable;\nconst columns = [\n  { title: \"Regioni\", data: \"area\" },\n  { title: \"Dosi somministrate\", data: \"dosi_somministrate\" },\n  { title: \"Dosi consegnate\", data: \"dosi_consegnate\" },\n  { title: \"%\", data: \"percentuale_somministrazione\" },\n];\n\nexport const Table = ({ deliveryTableData }) => {\n\n  // Add footer elements\n  useEffect(() => {\n    $(\"#datatable\").find(\"tfoot\")\n    $(\"#datatable\")\n      .find(\"table\")\n      .append('<tfoot><th></th><th></th><th></th><th></th></tfoot>')\n  }, [])\n\n  useEffect(() => {\n\n    $(\"#datatable\")\n      .find(\"table\")\n      .DataTable({\n        dom:\n          \"<'row'<'col-12'l>>\" +\n          \"<'row'<'col-12'tr>>\",\n        paging: false,\n        searching: true,\n        destroy: true,\n        data: deliveryTableData,\n        columns,\n        language: {\n          decimal: \",\",\n          thousands: \".\"\n        },\n        columnDefs: [\n          {\n            targets: 0,\n            width: '160px'\n          },\n          { type: 'natural', targets: 3 },\n          {\n            \"targets\": [1, 2, 3],\n            render: (data, type, row) => {\n              return Number(data).toLocaleString('it')\n            }\n          }\n        ],\n        footerCallback: (row, data, start, end, display) => {\n          var api = $(\"#datatable\")\n            .find(\"table\")\n            .DataTable();\n\n          // Remove the formatting to get integer data for summation\n          var intVal = function (i) {\n            return typeof i === 'string' ?\n              i.replace(/[$,]/g, '') * 1 :\n              typeof i === 'number' ?\n                i : 0;\n          };\n\n          let totalDelivery = api\n            .column(2, { search: 'applied' })\n            .data()\n            .reduce(function (a, b) {\n              return intVal(a) + intVal(b);\n            }, 0);\n\n          let totalVaccines = api\n            .column(1, { search: 'applied' })\n            .data()\n            .reduce(function (a, b) {\n              return intVal(a) + intVal(b);\n            }, 0);\n\n          // Total over all pages\n          var totalPercentage = totalDelivery ? (totalVaccines/totalDelivery)*100 : 0\n\n          // Update footer\n          $(api.column(3).footer()).html(\n            (totalPercentage).toFixed(1)\n          );\n\n          $(api.column(2).footer()).html(\n            totalDelivery.toLocaleString('it')\n          );\n\n          $(api.column(1).footer()).html(\n            totalVaccines.toLocaleString('it')\n          );\n\n          $(api.column(0).footer()).html(\n            'Totale'\n          );\n        }\n      });\n\n  },[deliveryTableData]);\n\n  return (\n    <div id=\"datatable\">\n      <table\n        className=\"table h-100 table-borderless compact table-hover deliveries-table\"\n        cellSpacing=\"0\"\n        width=\"100%\"\n        style={{ paddingBottom: 6 }}\n      />\n    </div>\n  );\n};\n","import { React, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport _ from \"lodash\";\n\nexport const MapArea = ({\n    handleMapDeliveryClick,\n    fillMapDeliveryArea,\n    fillBy,\n    summary,\n    tooltip,\n    percentage,\n}) => {\n        const [geographies, setGeographies] = useState([]);\n        const [maxValue, setMaxValue] = useState(0);\n\n        useEffect(() => {\n            if (percentage) {\n                setMaxValue(100);\n            } else {\n                const maxValue = _.maxBy(summary || {}, fillBy);\n                setMaxValue(maxValue ? maxValue[fillBy] : 0);\n            }\n        }, [summary, fillBy, percentage]);\n\n    const width = 498,\n          height = 478;\n\n    const projection = d3\n        .geoAlbers()\n        .center([0, 41])\n        .rotate([347, 0])\n        .parallels([35, 45])\n        .scale(2200)\n        .translate([width / 2, height / 2]);\n        useEffect(() => {\n            const fetchData = async () => {\n                const res = await fetch(\"data/geo/it.json\");\n                const data = await res.json();\n                setGeographies(topojson.feature(data, data.objects.regions).features);\n            };\n        fetchData();\n        }, []);\n\n    return (\n        <div className=\"map-area\">\n            <svg className=\"h-100 w-100\" height={height}>\n                <g className=\"countries\">\n                    {geographies.map((d, i) => {\n                        let reg_name = d.properties.reg_name;\n                        let regions = _.filter(summary, (i) => i.area === reg_name);\n                        let region = {};\n                        if (regions && regions.length > 0) {\n                            region = regions[0];\n                        }\n\n                        return (\n                            <path\n                                key={`path-${i}`}\n                                d={d3.geoPath().projection(projection)(d)}\n                                className=\"country\"\n                                id={`${region?.area?.trim()}`}\n                                fill={fillMapDeliveryArea({ region, maxValue, field: fillBy })}\n                                stroke=\"#FFFFFF\"\n                                strokeWidth={0.7}\n                                onClick={() => handleMapDeliveryClick(region)}\n                            >\n                                <title>\n                                    <span className=\"bg-info\">{tooltip(region)}</span>\n                                </title>\n                            </path>\n                        );\n                    })});\n                </g>\n            </svg>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { find, max, isEmpty } from \"lodash\";\nimport { Table } from \"./../components/Table\";\nimport { MapArea } from \"./../components/MapArea\";\n\nexport const Deliveries = ({ data }) => {\n    const [deliveryMapData, setDeliveryMapData] = useState([]);\n    const [deliveryTableData, setDeliveryTableData] = useState([]);\n    const [deliverySelectedRegion, setDeliverySelectedRegion] = useState(null);\n    const [totalDelivery, setTotalDelivery] = useState(0);\n    const [selectedAge, setSelectedAge] = useState(null);\n\n        useEffect(() => {\n            if (!isEmpty(data)) {\n                setDeliveryMapData(data.totalDeliverySummary);\n                setDeliveryTableData(data.totalDeliverySummary);\n                setTotalDelivery(data.tot);\n            }\n        }, [data]);\n\n        const resetFilter = () => {\n            setDeliverySelectedRegion(null);\n            setDeliveryTableData(data.totalDeliverySummary);\n            setTotalDelivery(data.tot);\n            setSelectedAge(null);\n            setDeliveryMapData(data.totalDeliverySummary);\n        };\n\n        const fillMapDeliveryArea = ({ region, maxValue, field }) => {\n            let scaleOp = 0;\n            if (region.code === deliverySelectedRegion) {\n                scaleOp = 1;\n            } else if (!deliverySelectedRegion) {\n                scaleOp = max([region[field] / maxValue, 0.1]);\n            } else {\n                const valueToFill = region[field] / (2 * maxValue);\n                scaleOp = max([valueToFill, 0.1]);\n            }\n            return `rgba(0,102,204,${scaleOp}) `;\n        };\n\n        const handleMapDeliveryClick = (region) => {\n            if (selectedAge) {\n                resetFilter();\n            }\n\n            if (deliverySelectedRegion === region.code) {\n                resetFilter();\n            } else {\n                const deliveryTableFilteredData = find(\n                data.totalDeliverySummary,\n                (d) => d.code === region.code\n            );\n\n            setDeliveryTableData([deliveryTableFilteredData]);\n            setDeliverySelectedRegion(region.code);\n            setTotalDelivery(deliveryTableFilteredData.dosi_somministrate);\n        }\n    };\n\n\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-12 d-flex justify-content-end\"></div>\n            </div>\n            <div className=\"row p-2 p-3 bg-grey\">\n                <div className=\"col-12 col-lg-6 h-100 order-md-2 order-lg-1 p-1 pb-5\">\n                    <Table deliveryTableData={deliveryTableData} className=\"mr-5 h-100\" />\n                </div>\n                <div className=\"col-12 col-lg-6 order-md-1 order-lg-2 text-center\">\n                    <div className=\"p-4 position-relative d-lg-none\">\n                        <div className=\"d-flex justify-content-start pr-5\">\n                            <h5 className=\"pl-4 pl-sm-1 justify-content-center\">Distribuzione somministrazioni rispetto alle consegne</h5>\n                        </div>\n                    </div>\n                    <div className=\"p-4 d-none d-lg-block map-legend mt-5\">\n                        <div className=\"d-flex justify-content-end\">\n                            <h5 className=\"pl-1 pl-sm-1 text-left\">\n                                Distribuzione<br />somministrazioni <br />rispetto alle consegne\n                            </h5>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center mt-5\">\n                    <MapArea\n                        fillMapDeliveryArea={fillMapDeliveryArea}\n                        summary={deliveryMapData}\n                        handleMapDeliveryClick={handleMapDeliveryClick}\n                        tooltip={(r) => r.area + \" \" + (r.percentuale_somministrazione && r.percentuale_somministrazione.toLocaleString(\"it\")) + \"%\"}\n                        fillBy=\"percentuale_somministrazione\"\n                    />\n                    </div>\n                    <div className=\"p-4 position-relative\">\n                        <div className=\"text-black\">\n                            <div className=\"d-flex justify-content-center \">\n                                <span className=\"numbers\">{totalDelivery?.toLocaleString(\"it\")}</span>\n                            </div>\n                            <div className=\"d-flex justify-content-center\">\n                                <h5>Totale somministrazioni</h5>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { React, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nexport const AgeHStackedBarChart = ({\n  handleRectClick,\n  height,\n  width,\n  data,\n  keys,\n  labels,\n  colors,\n  selectedCodeAge,\n  regionSelected\n  }) => {\n\n  const myRef = useRef();\n  const divRef = useRef();\n\n  useEffect(() => {\n      doExit();\n      draw();\n      // eslint-disable-next-line\n  }, [data, keys, labels, selectedCodeAge]);\n\n\n  const responsivefy = (svg) => {\n    // Container is the DOM element, svg is appended.\n    // Then we measure the container and find its\n    // aspect ratio.\n    const container = d3.select(svg.node().parentNode),\n      width = parseInt(svg.style(\"width\"), 10),\n      height = parseInt(svg.style(\"height\"), 10),\n      aspect = width / height;\n\n    // Add viewBox attribute to set the value to initial size\n    // add preserveAspectRatio attribute to specify how to scale\n    // and call resize so that svg resizes on page load\n    svg\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .attr(\"preserveAspectRatio\", \"xMinYMid\")\n      .call(resize);\n\n    d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n    function resize() {\n      const targetWidth = parseInt(container.style(\"width\"));\n      svg.attr(\"width\", targetWidth);\n      svg.attr(\"height\", Math.round(targetWidth / aspect));\n    }\n  };\n\n  function doExit() {\n    d3.select(divRef.current).selectAll(\"svg\").remove();\n  }\n\n  const draw = () => {\n\n    const dataset = d3.stack().keys(keys)(data);\n\n    // append element\n    const svg = d3\n      .select(divRef.current)\n      .append(\"svg\")\n      .style('margin-bottom', 10)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    const margin = { y: 30, x: 60 };\n\n    // axis\n    const xScale = d3.scaleLinear().domain([0, d3.max(data, function(d) { return d['Totale platea']; })]);\n    const yScale = d3.scaleBand().padding(0.2);\n    xScale.range([0, width]);\n    yScale.range([0, height]).domain(data.map((d) => d.label));\n\n    svg\n      .attr(\"width\", width + 2 * margin.x)\n      .attr(\"height\", height + 2 * margin.y)\n      .call(responsivefy) // Call responsivefy to make the chart responsive\n      .attr(\"id\", \"svg-stack-bar\");\n\n    const chart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.x},${margin.y})`);\n\n    chart\n      .append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", `translate(0, 0)`)\n      .style(\"font-size\", \"12px\")\n      .call(d3.axisLeft(yScale))\n      .attr('stroke-width', 0)\n        .selectAll(\"text\")\n            .attr(\"y\", 0)\n            .attr(\"x\", -30)\n            .style(\"text-anchor\", \"start\")\n            .style(\"fill\", \"#19191a\");\n\n\n    const tooltip = d3\n      .select('body')\n      .append('div')\n      .attr('class', 'd3-tooltip')\n      .style('position', 'absolute')\n      .style('z-index', '10')\n      .style('display', 'none')\n      .style('padding', '10px')\n      .style('background', 'rgba(0,0,0,0.8)')\n      .style('border-radius', '4px')\n      .style('color', '#fff');\n\n    const path = chart.selectAll().data(dataset);\n\n    path\n      .enter()\n      .append(\"g\")\n      .attr(\"fill\", function(d) {\n        return colors[d.index];\n      })\n      .attr(\"dose\", function(d) {\n        return d.key;\n      })\n      .selectAll(\"rect\")\n      .data(function(d) {\n        return d;\n      })\n      .enter().append(\"rect\")\n      .on(\"click\", (e, d) => {\n        handleRectClick(d);\n        tooltip.html(``).style('display', 'none');\n      })\n      .attr(\"opacity\", (d) => {\n        const ageCode = d.data.label.toLowerCase().replaceAll(' ', '_');\n\n        let opac = selectedCodeAge === ageCode ? 1 : !selectedCodeAge ? 1 : 0.3;\n        return opac;\n      })\n      .attr(\"x\", function(d) {\n        return xScale(d[0]) + 60;\n      })\n      .attr(\"y\", function(d) {\n        return yScale(d.data.label);\n      })\n      .attr(\"width\", function(d) {\n        return xScale(d[1]) - xScale(d[0]);\n      })\n      .attr(\"height\", yScale.bandwidth())\n      .on('mouseover', function (d, i) {\n        d3.select(this).transition().attr('fill', '#0BD9D3');\n      })\n      .on('mousemove', function (event, d) {\n        let regione = regionSelected ? \" \" + regionSelected : \"\";\n\n        if (d3.select(this.parentNode).attr(\"dose\") === 'totale') {\n          tooltip\n            .style('top', event.pageY - 10 + 'px')\n            .style('left', event.pageX + 10 + 'px');\n          tooltip\n            .html(\n                `<div style=\"text-align: center; line-height: 1.15rem;\">\n                <div style=\"font-size: 12px;\">${regione}</div>\n                <div><b>${d.data.label}</b></div>\n                <div style=\"font-size: 14px;\">Platea</div>\n                <div>${d.data[\"Totale platea\"].toLocaleString('it')}</div>\n                </div>`\n                )\n            .style('display', null);\n        }\n        else {\n          var perc = 0;\n          if (d3.select(this.parentNode).attr(\"dose\") === 'prima') {\n            let sum = d.data[\"prima\"] + d.data[\"seconda\"] + d.data[\"addizionale\"] + d.data[\"second_booster\"] + d.data[\"third_booster\"];\n            perc = (sum / d.data[\"Totale platea\"]) * 100;\n          }\n          else {\n            if (d3.select(this.parentNode).attr(\"dose\") === 'seconda') {\n              let sum = d.data[\"seconda\"] + d.data[\"addizionale\"] + d.data[\"second_booster\"] + d.data[\"third_booster\"];\n              perc = (sum / d.data[\"Totale platea\"]) * 100;\n            }\n            else {\n              if (d3.select(this.parentNode).attr(\"dose\") === 'addizionale') {\n                let sum = d.data[\"addizionale\"] + d.data[\"second_booster\"] + d.data[\"third_booster\"];\n                perc = (sum / d.data[\"Totale platea\"]) * 100;\n              }\n              else {\n                if (d3.select(this.parentNode).attr(\"dose\") === 'second_booster') {\n                  let sum = d.data[\"second_booster\"] + d.data[\"third_booster\"];\n                  perc = (sum / d.data[\"Totale platea\"]) * 100;\n                }\n                else {\n                  perc = (d.data[\"third_booster\"] / d.data[\"Totale platea\"]) * 100;\n                }\n              }\n            }\n          }\n\n          tooltip\n            .style('top', event.pageY - 10 + 'px')\n            .style('left', event.pageX + 10 + 'px');\n\n            if ( perc < 0) {\n\n                tooltip\n                    .html(\n                        `<div style=\"text-align: center; line-height: 1.15rem;\">\n                        <div style=\"font-size: 12px;\">${regione} ${d.data.label}</div>\n                        <div style=\"text-align: center\"><b>${labels[d3.select(this.parentNode).attr(\"dose\")]} </b></div>\n                        <div style=\"font-size: 14px;\">Somministrate ${(d[1]).toLocaleString('it')} su ${d.data[\"Totale platea\"].toLocaleString('it')}</div>`\n                    )\n                    .style('display', null);\n\n            } else {\n\n                tooltip\n                    .html(\n                        `<div style=\"text-align: center; line-height: 1.15rem;\">\n                        <div style=\"font-size: 12px;\">${regione} ${d.data.label}</div>\n                        <div style=\"text-align: center\"><b>${labels[d3.select(this.parentNode).attr(\"dose\")]} </b></div>\n                        <div style=\"font-size: 14px;\"><b>(${perc.toFixed(2).toLocaleString(\"it\")} %)</b></div>\n                        <div style=\"font-size: 14px;\">Somministrate ${(d[1]).toLocaleString('it')} su ${d.data[\"Totale platea\"].toLocaleString('it')}</div>`\n                    )\n                    .style('display', null);\n            }\n        }\n      })\n      .on('mouseout', function (d) {\n          tooltip.html(``).style('display', 'none');\n          d3.select(this).transition().attr('fill', colors[d.key]);\n      });\n\n    path.exit().remove();\n  };\n\n  return (\n    <div ref={divRef} className=\"chart svg-container\">\n      <svg ref={myRef} className=\"svg-content-responsive\"></svg>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { isEmpty, max } from \"lodash\";\nimport { AgeHStackedBarChart } from \"./../components/AgeHStackedBarChart\";\nimport { MapArea } from \"./../components/MapArea\";\n\nexport const AgeDoses = ({ data }) => {\n    const [dosesAgesColor, setdosesAgesColor] = useState([]);\n    const [dosesAges, setdosesAges] = useState([]);\n    const [dosesAgesKeys, setDosesAgesKeys] = useState([]);\n    const [keyValueDoses, setKeyValueDoses] = useState({});\n    const [dosesAgesData, setDosesAgesData] = useState([]);\n\n    const [categoryMapData, setCategoryMapData] = useState([]);\n    const [categoryMapField, setCategoryMapField] = useState(\"somministrazioni\");\n\n    const [categorySelectedRegion, setCategorySelectedRegion] = useState(null);\n    const [categorySelectedRegionDescr, setCategorySelectedRegionDescr] = useState(null);\n    const [selectedCodeAge, setSelectedCodeAge] = useState(null);\n\n    const [totalByCategory, setTotalByCategory] = useState(0);\n\n    useEffect(() => {\n        if (!isEmpty(data)) {\n            setdosesAgesColor(data.agedosesContent.dosesAgesColor);\n            setdosesAges(data.agedosesContent.dosesAges);\n            setDosesAgesKeys(data.agedosesContent.keysDosesAges);\n            setKeyValueDoses(data.agedosesContent.keyValueDoses);\n            setDosesAgesData(data.agedosesContent.dosesAgesData);\n\n            setTotalByCategory(data.tot);\n            setCategoryMapData(data.agedosesContent.secondDosesMapData);\n        }\n    }, [data]);\n\n    const resetFilter = () => {\n        setSelectedCodeAge(null);\n        setCategorySelectedRegion(null);\n        setCategorySelectedRegionDescr(null);\n        setTotalByCategory(data.tot);\n        setDosesAgesData(data.agedosesContent.dosesAgesData);\n        setCategoryMapField(\"somministrazioni\");\n        setCategoryMapData(data.agedosesContent.secondDosesMapData);\n    };\n\n    const fillMapCategoryArea = ({ region, maxValue, field }) => {\n        let scaleOp = 0;\n        if (region.code === categorySelectedRegion) {\n          scaleOp = 1;\n        } else if (!categorySelectedRegion) {\n          scaleOp = max([region[field] / maxValue, 0.1]);\n        } else {\n          const valueToFill = region[field] / (2 * maxValue);\n          scaleOp = max([valueToFill, 0.1]);\n        }\n        return `rgba(0,102,204,${scaleOp}) `;\n    };\n\n    const handleMapCategoryClick = (region) => {\n        if (selectedCodeAge) {\n          resetFilter();\n        }\n\n        if (categorySelectedRegion === region.code) {\n          resetFilter();\n        } else {\n          setCategorySelectedRegion(region.code);\n          setCategorySelectedRegionDescr(region.area);\n          setDosesAgesData(data.agedosesContent.dosesAgesRegionData[region.code])\n\n          for(let row of data?.totalDeliverySummary) {\n            if (row.code === region.code) {\n                setTotalByCategory(row.dosi_somministrate);\n            }\n          }\n        }\n    };\n\n    const handleCategoryBarChartClick = (cat) => {\n        if (categorySelectedRegion) {\n          resetFilter();\n        }\n\n        const ageCode = cat.data.label.toLowerCase().replaceAll(' ', '_');\n\n        if (selectedCodeAge === ageCode) {\n          resetFilter();\n        } else {\n          setSelectedCodeAge(ageCode);\n          setCategoryMapField(ageCode);\n\n          for(let row of data.agedosesContent.dosesAgesData) {\n            if (row.label === cat.data.label) {\n                setTotalByCategory(row.totale);\n                break;\n            }\n          }\n        }\n    };\n\n    return (\n        <div className=\"row\">\n            {/* Box Title */}\n            <div className=\"col-12 d-flex justify-content-center align-items-center section-title mx-2\">\n                <div>\n                    <h3>Somministrazioni per fascia d'età - dose</h3>\n                </div>\n            </div>\n            {/* // Box Title */}\n\n            <div className=\"col-12 col-md-12 m-3\">\n                {/* Total Box - Mobile Layout */}\n                <div className=\"d-lg-none bg-box box-mobile m-3\">\n                    <div className=\"text-white\">\n                        <div className=\"d-flex justify-content-center pt-5\">\n                            <h5>Totale somministrazioni</h5>\n                        </div>\n                        <div className=\"d-flex justify-content-center\">\n                            <p className=\"box-numbers\">\n                                {totalByCategory && totalByCategory.toLocaleString(\"it\")}\n                            </p>\n                        </div>\n                        <div className=\"col-12 d-flex justify-content-end pb-2\">\n                            <img alt=\"reset-plot2\" src=\"reset_white.png\" onClick={resetFilter} height=\"36px\"/>\n                        </div>\n                    </div>\n                </div>\n                {/* // Total Box - Mobile Layout */}\n\n                {/* Total Box - Desktop Layout */}\n                <div className=\"col-4 col-md-4 d-none d-lg-block\">\n                    <div className=\"bg-box box-card box-left\">\n                        <div className=\"text-white\">\n                            <div className=\"d-flex justify-content-start pt-3 pl-5\">\n                                <h5>Totale somministrazioni</h5>\n                            </div>\n                            <div className=\"d-flex justify-content-start pl-5\">\n                                <p className=\"box-numbers\">\n                                    {totalByCategory && totalByCategory.toLocaleString(\"it\")}\n                                </p>\n                            </div>\n                            <div className=\"col-12 d-flex justify-content-end pb-2\">\n                                <img alt=\"Reset\" src=\"reset_white.png\" onClick={resetFilter} height=\"36px\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* // Total Box - Desktop Layout */}\n            </div>\n            <div className=\"col-12 col-md-6\">\n\n                {/* Graph */}\n                <AgeHStackedBarChart\n                    width={+350}\n                    height={+300}\n                    property={{ xprop: \"label\", yprop: \"total\" }}\n                    handleRectClick={handleCategoryBarChartClick}\n                    regionSelected={categorySelectedRegionDescr}\n                    selectedCodeAge={selectedCodeAge}\n                    colors={dosesAgesColor}\n                    keys={dosesAgesKeys}\n                    labels={keyValueDoses}\n                    data={dosesAgesData}\n                />\n                {/* // Graph */}\n\n                {/* Legend */}\n                <div className=\"row mb-4 ml-4\">\n                    {dosesAges.map((dose, index) => {\n                        return (\n                            <div className=\"row\" key={dose}>\n                                <div className=\"circle\" style={{ backgroundColor: dosesAgesColor[index] }}></div>\n                                <div className=\"legend-dark mr-4\">{dose}</div>\n                            </div>\n                        )\n                    })}\n                </div>\n                {/* // Legend */}\n\n                <p className=\"d-block d-sm-none text-center\">*Tieni premuto sulle barre del grafico per visualizzare i dati sulle dosi somministrate</p>\n                <p className=\"d-none d-sm-block text-center\">*Passa con il mouse sulle barre del grafico per visualizzare i dati sulle dosi somministrate</p>\n            </div>\n            <div className=\"col-12 col-md-6\">\n\n                {/* Map Title - Mobile View*/}\n                <div className=\"p-4 d-lg-none\">\n                    <div className=\"text-center\">\n                        <h5>Percentuale vaccinati per regione</h5>\n                    </div>\n                </div>\n                {/* // Map Title - Mobile View*/}\n\n                {/* Map Graph */}\n                <MapArea\n                    fillMapDeliveryArea={fillMapCategoryArea}\n                    summary={categoryMapData}\n                    handleMapDeliveryClick={handleMapCategoryClick}\n                    fillBy={categoryMapField}\n                    percentage={true}\n                    tooltip={(r) => {\n                            var region = null;\n                            for(let row of categoryMapData) {\n                                if (row.code === r.code) {\n                                    region = row;\n                                }\n                            }\n\n                            return (\n                                r.area +\n                                \" \" +\n                                (r[categoryMapField] && r[categoryMapField].toFixed(2).toLocaleString(\"it\") + \"%\") +\n                                \" \" +\n                                (region && region[categoryMapField] && \"(\" + region[categoryMapField].toLocaleString(\"it\") + \")\")\n                            )\n                        }\n                    }\n                    className=\"ml-5\"\n                />\n                {/* // Map Graph */}\n\n                {/* Map Title - Desktop View*/}\n                {/* <div className=\"p-4 position-relative d-none d-lg-block\" style={{ left: \"300px\", top: \"-390px\" }}> */}\n                <div className=\"p-4 d-none d-lg-block map-legend\">\n                    <div className=\"d-flex justify-content-start pr-5\">\n                        <h5 className=\"pl-3 pl-sm-1\">\n                            Percentuale vaccinati\n                            <br /> per regione\n                        </h5>\n                    </div>\n                </div>\n                {/* // Map Title - Desktop View*/}\n            </div>\n        </div>\n    )\n};","import { React, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nexport const HealedHStackedBarChart = ({\n  handleRectClick,\n  height,\n  width,\n  data,\n  keys,\n  labels,\n  colors,\n  selectedCodeAge,\n  regionSelected\n  }) => {\n\n  const myRef = useRef();\n  const divRef = useRef();\n\n  useEffect(() => {\n      doExit();\n      draw();\n      // eslint-disable-next-line\n  }, [data, keys, labels, selectedCodeAge]);\n\n\n  const responsivefy = (svg) => {\n    // Container is the DOM element, svg is appended.\n    // Then we measure the container and find its\n    // aspect ratio.\n    const container = d3.select(svg.node().parentNode),\n      width = parseInt(svg.style(\"width\"), 10),\n      height = parseInt(svg.style(\"height\"), 10),\n      aspect = width / height;\n\n    // Add viewBox attribute to set the value to initial size\n    // add preserveAspectRatio attribute to specify how to scale\n    // and call resize so that svg resizes on page load\n    svg\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .attr(\"preserveAspectRatio\", \"xMinYMid\")\n      .call(resize);\n\n    d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n    function resize() {\n      const targetWidth = parseInt(container.style(\"width\"));\n      svg.attr(\"width\", targetWidth);\n      svg.attr(\"height\", Math.round(targetWidth / aspect));\n    }\n  };\n\n  function doExit() {\n    d3.select(divRef.current).selectAll(\"svg\").remove();\n  }\n\n  const draw = () => {\n\n    const dataset = d3.stack().keys(keys)(data);\n\n    // append element\n    const svg = d3\n      .select(divRef.current)\n      .append(\"svg\")\n      .style('margin-bottom', 10)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    const margin = { y: 30, x: 60 };\n\n    // axis\n    const xScale = d3.scaleLinear().domain([0, d3.max(data, function(d) { return d['post'] + d['senza'] + d['booster'] + d['2booster']; })]);\n    const yScale = d3.scaleBand().padding(0.2);\n    xScale.range([0, width]);\n    yScale.range([0, height]).domain(data.map((d) => d.label));\n\n    svg\n      .attr(\"width\", width + 2 * margin.x)\n      .attr(\"height\", height + 2 * margin.y)\n      .call(responsivefy) // Call responsivefy to make the chart responsive\n      .attr(\"id\", \"svg-stack-bar\");\n\n    const chart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.x},${margin.y})`);\n\n    chart\n      .append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", `translate(0, 0)`)\n      .style(\"font-size\", \"12px\")\n      .call(d3.axisLeft(yScale))\n      .attr('stroke-width', 0)\n        .selectAll(\"text\")\n            .attr(\"y\", 0)\n            .attr(\"x\", -30)\n            .style(\"text-anchor\", \"start\")\n            .style(\"fill\", \"#19191a\");\n\n\n    const tooltip = d3\n      .select('body')\n      .append('div')\n      .attr('class', 'd3-tooltip')\n      .style('position', 'absolute')\n      .style('z-index', '10')\n      .style('display', 'none')\n      .style('padding', '10px')\n      .style('background', 'rgba(0,0,0,0.8)')\n      .style('border-radius', '4px')\n      .style('color', '#fff');\n\n    const path = chart.selectAll().data(dataset);\n\n    path\n      .enter()\n      .append(\"g\")\n      .attr(\"fill\", function(d) {\n        return colors[d.index];\n      })\n      .attr(\"dose\", function(d) {\n        return d.key;\n      })\n      .selectAll(\"rect\")\n      .data(function(d) {\n        return d;\n      })\n      .enter().append(\"rect\")\n      .on(\"click\", (e, d) => {\n        handleRectClick(d);\n        tooltip.html(``).style('display', 'none');\n      })\n      .attr(\"opacity\", (d) => {\n        const ageCode = d.data.label.toLowerCase().replaceAll(' ', '_');\n\n        let opac = selectedCodeAge === ageCode ? 1 : !selectedCodeAge ? 1 : 0.3;\n        return opac;\n      })\n      .attr(\"x\", function(d) {\n        return xScale(d[0]) + 60;\n      })\n      .attr(\"y\", function(d) {\n        return yScale(d.data.label);\n      })\n      .attr(\"width\", function(d) {\n        return xScale(d[1]) - xScale(d[0]);\n      })\n      .attr(\"height\", yScale.bandwidth())\n      .on('mouseover', function (d, i) {\n        d3.select(this).transition().attr('fill', '#0BD9D3');\n      })\n      .on('mousemove', function (event, d) {\n        let regione = regionSelected ? \" \" + regionSelected : \"\";\n\n        tooltip\n          .style('top', event.pageY - 10 + 'px')\n          .style('left', event.pageX + 10 + 'px');\n        tooltip\n          .html(\n              `<div style=\"text-align: center; line-height: 1.15rem;\">\n              <div style=\"font-size: 12px;\">${regione} ${d.data.label}</div>\n              <div style=\"text-align: center\"><b>${labels[d3.select(this.parentNode).attr(\"dose\")]} </b></div>\n              <div style=\"font-size: 14px;\">${(d[1]).toLocaleString('it')}</div>`\n          )\n          .style('display', null);\n      })\n      .on('mouseout', function (d) {\n          tooltip.html(``).style('display', 'none');\n          d3.select(this).transition().attr('fill', colors[d.key]);\n      });\n\n    path.exit().remove();\n  };\n\n  return (\n    <div ref={divRef} className=\"chart svg-container\">\n      <svg ref={myRef} className=\"svg-content-responsive\"></svg>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { isEmpty, max } from \"lodash\";\nimport { HealedHStackedBarChart } from \"../components/HealedHStackedBarChart\";\nimport { MapArea } from \"../components/MapArea\";\n\nexport const Healed = ({ data }) => {\n    const [healedColor, setHealedColor] = useState([]);\n    const [healed, setHealed] = useState([]);\n    const [healedKeys, setHealedKeys] = useState([]);\n    const [healedData, setHealedData] = useState([]);\n    const [keyValueHealed, setKeyValueHealed] = useState({});\n\n    const [categoryMapData, setCategoryMapData] = useState([]);\n    const [categoryMapField, setCategoryMapField] = useState(\"guariti\");\n\n    const [categorySelectedRegion, setCategorySelectedRegion] = useState(null);\n    const [categorySelectedRegionDescr, setCategorySelectedRegionDescr] = useState(null);\n    const [selectedCodeAge, setSelectedCodeAge] = useState(null);\n\n    const [totalByCategory, setTotalByCategory] = useState(0);\n\n    useEffect(() => {\n        if (!isEmpty(data)) {\n            setHealedColor(data.healedContent.healedColor);\n            setHealed(data.healedContent.healed);\n            setHealedData(data.healedContent.healedData);\n            setHealedKeys(data.healedContent.keysHealed);\n\n            setTotalByCategory(data.healedContent.totalGuaritiHealedSection);\n            setCategoryMapData(data.healedContent.healedMapData);\n\n            setKeyValueHealed(data.healedContent.keyValueHealed);\n        }\n    }, [data]);\n\n    const resetFilter = () => {\n        setSelectedCodeAge(null);\n        setCategorySelectedRegion(null);\n        setCategorySelectedRegionDescr(null);\n        setTotalByCategory(data.healedContent.totalGuaritiHealedSection);\n        setHealedData(data.healedContent.healedData);\n        setCategoryMapField(\"guariti\");\n        setCategoryMapData(data.healedContent.healedMapData);\n    };\n\n    const fillMapCategoryArea = ({ region, maxValue, field }) => {\n        let scaleOp = 0;\n        if (region.code === categorySelectedRegion) {\n          scaleOp = 1;\n        } else if (!categorySelectedRegion) {\n          scaleOp = max([region[field] / maxValue, 0.1]);\n        } else {\n          const valueToFill = region[field] / (2 * maxValue);\n          scaleOp = max([valueToFill, 0.1]);\n        }\n        return `rgba(0,102,204,${scaleOp}) `;\n    };\n\n    const handleMapCategoryClick = (region) => {\n        if (selectedCodeAge) {\n          resetFilter();\n        }\n\n        if (categorySelectedRegion === region.code) {\n          resetFilter();\n        } else {\n          setCategorySelectedRegion(region.code);\n          setCategorySelectedRegionDescr(region.area);\n          setHealedData(data.healedContent.healedRegionData[region.code]);\n\n          var val = 0;\n          for(let row of data.healedContent.healedRegionData[region.code]) {\n            val += row.Totale;\n          }\n          setTotalByCategory(val);\n        }\n    };\n\n    const handleCategoryBarChartClick = (cat) => {\n        if (categorySelectedRegion) {\n          resetFilter();\n        }\n\n        const ageCode = cat.data.label.toLowerCase().replaceAll(' ', '_');\n\n        if (selectedCodeAge === ageCode) {\n          resetFilter();\n        } else {\n          setSelectedCodeAge(ageCode);\n          setCategoryMapField(ageCode);\n\n          for(let row of data.healedContent.healedData) {\n            if (row.label === cat.data.label) {\n                setTotalByCategory(row.Totale);\n                break;\n            }\n          }\n        }\n    };\n\n    return (\n        <div className=\"row\">\n            {/* Box Title */}\n            <div className=\"col-12 d-flex justify-content-center align-items-center section-title mx-2\">\n                <div className=\"text-center\">\n                    <h3 className=\"mb-0\">Platea guariti</h3>\n                </div>\n            </div>\n            {/* // Box Title */}\n\n            <div className=\"col-12 col-md-12 m-3\">\n                {/* Total Box - Mobile Layout */}\n                <div className=\"d-lg-none bg-box box-mobile m-3\">\n                    <div className=\"text-white\">\n                        <div className=\"d-flex justify-content-center pt-5\">\n                            <h5>Totale guariti</h5>\n                        </div>\n                        <div className=\"d-flex justify-content-center\">\n                            <p className=\"box-numbers\">\n                                {totalByCategory && totalByCategory.toLocaleString(\"it\")}\n                            </p>\n                        </div>\n                        <div className=\"col-12 d-flex justify-content-end pb-2\">\n                            <img alt=\"reset-plot2\" src=\"reset_white.png\" onClick={resetFilter} height=\"36px\"/>\n                        </div>\n                    </div>\n                </div>\n                {/* // Total Box - Mobile Layout */}\n\n                {/* Total Box - Desktop Layout */}\n                <div className=\"col-4 col-md-4 d-none d-lg-block\">\n                    <div className=\"bg-box box-card box-left\">\n                        <div className=\"text-white\">\n                            <div className=\"d-flex justify-content-start pt-3 pl-5\">\n                                <h5>Totale guariti</h5>\n                            </div>\n                            <div className=\"d-flex justify-content-start pl-5\">\n                                <p className=\"box-numbers\">\n                                    {totalByCategory && totalByCategory.toLocaleString(\"it\")}\n                                </p>\n                            </div>\n                            <div className=\"col-12 d-flex justify-content-end pb-2\">\n                                <img alt=\"Reset\" src=\"reset_white.png\" onClick={resetFilter} height=\"36px\"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* // Total Box - Desktop Layout */}\n            </div>\n            <div className=\"col-12 col-md-6\">\n\n                {/* Graph */}\n                <HealedHStackedBarChart\n                    width={+350}\n                    height={+300}\n                    property={{ xprop: \"label\", yprop: \"total\" }}\n                    handleRectClick={handleCategoryBarChartClick}\n                    regionSelected={categorySelectedRegionDescr}\n                    selectedCodeAge={selectedCodeAge}\n                    colors={healedColor}\n                    keys={healedKeys}\n                    labels={keyValueHealed}\n                    data={healedData}\n                />\n                {/* // Graph */}\n\n                 {/* Legend */}\n                 <div className=\"row mb-4 ml-4\">\n                    {healed.map((itemVal, index) => {\n                        return (\n                            <div className=\"row\" key={itemVal}>\n                                <div className=\"circle\" style={{ backgroundColor: healedColor[index] }}></div>\n                                <div className=\"legend-dark mr-4\">{itemVal}</div>\n                            </div>\n                        )\n                    })}\n                </div>\n                {/* // Legend */}\n\n            </div>\n            <div className=\"col-12 col-md-6 my-0 py-0\">\n                {/* Map Graph */}\n                <MapArea\n                    fillMapDeliveryArea={fillMapCategoryArea}\n                    summary={categoryMapData}\n                    handleMapDeliveryClick={handleMapCategoryClick}\n                    fillBy={categoryMapField}\n                    percentage={false}\n                    tooltip={(r) => {\n                            var region = null;\n                            for(let row of categoryMapData) {\n                                if (row.code === r.code) {\n                                    region = row;\n                                }\n                            }\n\n                            return (\n                                r.area +\n                                \" \" +\n                                (region && region[categoryMapField] && \"(\" + region[categoryMapField].toLocaleString(\"it\") + \")\")\n                            )\n                        }\n                    }\n                    className=\"ml-5\"\n                />\n                {/* // Map Graph */}\n\n                <p className=\"text-center\">*Seleziona la Regione/Provincia Autonoma per visualizzare il dettaglio.</p>\n            </div>\n        </div>\n    )\n};","import { React, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nexport const StackedBarChart = ({\n  height,\n  width,\n  data,\n  keys,\n  colors,\n  selectedFrom,\n  selectedTo,\n  property,\n  title,\n  ytitle\n  }) => {\n\n  const myRef = useRef();\n  const divRef = useRef();\n\n  useEffect(() => {\n      doExit();\n      draw();\n      // eslint-disable-next-line\n  }, [data, keys, selectedFrom, selectedTo]);\n\n\n  const responsivefy = (svg) => {\n    // Container is the DOM element, svg is appended.\n    // Then we measure the container and find its\n    // aspect ratio.\n    const container = d3.select(svg.node().parentNode),\n      width = parseInt(svg.style(\"width\"), 10),\n      height = parseInt(svg.style(\"height\"), 10),\n      aspect = width / height;\n\n    // Add viewBox attribute to set the value to initial size\n    // add preserveAspectRatio attribute to specify how to scale\n    // and call resize so that svg resizes on page load\n    svg\n      .attr(\"viewBox\", `0 0 ${width} ${height+10}`)\n      .attr(\"preserveAspectRatio\", \"xMinYMid\")\n      .call(resize);\n\n    d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n    function resize() {\n      const targetWidth = parseInt(container.style(\"width\"));\n      svg.attr(\"width\", targetWidth);\n      svg.attr(\"height\", Math.round(targetWidth / aspect));\n    }\n  };\n\n  function doExit() {\n    d3.select(divRef.current).selectAll(\"svg\").remove();\n  }\n\n  const draw = () => {\n\n    const dataset = d3.stack().keys(keys)(data.slice(selectedFrom, selectedTo));\n\n    // append element\n    const svg = d3\n      .select(divRef.current)\n      .append(\"svg\")\n      .style('margin-bottom', 15)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    const margin = { y: 50, x: 50 };\n\n    // axis\n    const xScale = d3.scaleBand().padding(0.2);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data.slice(selectedFrom, selectedTo), function(d) { return d.total; })]);\n    yScale.range([height, 0]);\n    xScale.range([0, width]).domain(data.slice(selectedFrom, selectedTo).map((d) => d.label));\n\n    svg\n      .attr(\"width\", width + 2 * margin.x)\n      .attr(\"height\", height + 2 * margin.y)\n      .call(responsivefy) // Call responsivefy to make the chart responsive\n      .attr(\"id\", \"svg-stack-bar\");\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", width / 2 + margin.x)\n      .attr(\"y\", margin.y / 2)\n      .attr(\"class\", \"title\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", \"rotate(90)\")\n      .attr(title);\n\n    svg\n      .append(\"text\")\n      .attr(\"x\", -(height / 2) - margin.y)\n      .attr(\"y\", margin.x / 2.4)\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"class\", \"title\")\n      .text(ytitle);\n\n\n    const chart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.x},${margin.y})`);\n\n    chart\n      .append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .style('font-size', 16)\n      .call(d3.axisBottom(xScale))\n        .selectAll(\"text\") // x axis label rotation\n            .attr(\"y\", -5)\n            .attr(\"x\", 11)\n            .attr(\"transform\", \"rotate(90)\")\n            .style(\"text-anchor\", \"start\");\n\n\n    const tooltip = d3\n      .select('body')\n      .append('div')\n      .attr('class', 'd3-tooltip')\n      .style('position', 'absolute')\n      .style('z-index', '10')\n      .style('display', 'none')\n      .style('padding', '10px')\n      .style('background', 'rgba(0,0,0,0.8)')\n      .style('border-radius', '4px')\n      .style('color', '#fff');\n\n    const path = chart.selectAll().data(dataset);\n\n    path\n      .enter()\n      .append(\"g\")\n      .attr(\"fill\", function(d) {\n        return colors[d.key];\n      })\n      .attr(\"supply\", function(d) {\n        return d.key;\n      })\n      .selectAll(\"rect\")\n      .data(function(d) {\n        return d;\n      })\n      .enter().append(\"rect\")\n      .attr(\"x\", function(d) {\n        return xScale(d.data.label);\n      })\n      .attr(\"y\", function(d) {\n        return yScale(d[1]);\n      })\n      .attr(\"height\", function(d) {\n        return yScale(d[0]) - yScale(d[1]);\n      })\n      .attr(\"width\", xScale.bandwidth())\n      .on('mouseover', function (d, i) {\n        d3.select(this).transition().attr('fill', '#0BD9D3');\n      })\n      .on('mousemove', function (event, d) {\n        tooltip\n            .style('top', event.pageY - 10 + 'px')\n            .style('left', event.pageX + 10 + 'px');\n        tooltip\n          .html(\n            `<div style=\"text-align: center\"><b>${d3.select(this.parentNode).attr(\"supply\")}</b></div>\n            <div>${(d[1] - d[0]).toLocaleString('it')} su ${d.data.total.toLocaleString(\"it\")}</div>\n            <div style=\"text-align: center; font-size: 12px\">dal ${(d.data.labelfrom)} al ${d.data.labelto}</div>`\n          )\n          .style('display', null);\n      })\n      .on('mouseout', function (d) {\n          tooltip.html(``).style('display', 'none');\n          d3.select(this).transition().attr('fill', colors[d.key]);\n      });\n    path.exit().remove();\n  };\n\n  return (\n    <div ref={divRef} className=\"chart svg-container\">\n      <svg ref={myRef} className=\"svg-content-responsive\"></svg>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Range, getTrackBackground } from \"react-range\";\n\nexport const RangeWeek = ({\n    from,\n    to,\n    min,\n    max,\n    changeFrom,\n    changeTo\n  }) => {\n\n  const [values, setValues] = useState([0, 1]);\n\n  const STEP = 1;\n\n  useEffect(() => {\n    setValues([from, to])\n  },[from, to, min, max]);\n\n\n  return (\n    <div className=\"col-12\"\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        backgroundColor: 'rgb(15, 53, 89)'\n      }}\n    >\n      <Range\n        draggableTrack\n        values={values}\n        step={STEP}\n        min={min}\n        max={max}\n        rtl={false}\n        onChange={(values) => {\n          if (values[0] !== values[1]) {\n            setValues(values);\n            changeFrom(values[0]);\n            changeTo(values[1]);\n          }\n\n        }}\n        renderTrack={({ props, children }) => (\n          <div\n            onMouseDown={props.onMouseDown}\n            onTouchStart={props.onTouchStart}\n            style={{\n              ...props.style,\n              height: '36px',\n              display: 'flex',\n              width: '100%',\n              marginRight: 10,\n              marginLeft: 10\n            }}\n          >\n            <div\n              ref={props.ref}\n              style={{\n                height: '5px',\n                width: '100%',\n                borderRadius: '4px',\n                background: getTrackBackground({\n                  values,\n                  colors: ['#ccc', 'black', '#ccc'],\n                  min: min,\n                  max: max,\n                  rtl: false\n                }),\n                alignSelf: 'center'\n              }}\n            >\n              {children}\n            </div>\n          </div>\n        )}\n        renderThumb={({ props, isDragged }) => (\n          <div\n            {...props}\n            style={{\n              ...props.style,\n              height: '20px',\n              width: '20px',\n              borderRadius: '50%',\n              backgroundColor: '#ccc',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              boxShadow: '0px 2px 6px #AAA'\n            }}\n          >\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { isEmpty } from \"lodash\";\nimport { StackedBarChart } from \"./../components/StackedBarChart\";\nimport { RangeWeek } from \"./../components/RangeWeek\";\n\nexport const Weeks = ({ data }) => {\n    const [suppliersColor, setSuppliersColor] = useState([]);\n    const [suppliers, setSuppliers] = useState([]);\n    const [suppliersWeek, setSuppliersWeek] = useState([]);\n    const [from, setFrom] = useState(0);\n    const [to, setTo] = useState(0);\n\n    useEffect(() => {\n        if (!isEmpty(data)) {\n            setSuppliersColor(data.weekContent.suppliersColor);\n            setSuppliers(data.weekContent.suppliers);\n            setSuppliersWeek(data.weekContent.suppliersWeek);\n\n            setTo(data.weekContent.suppliersWeek.length);\n            if (data.weekContent.suppliersWeek.length >= 9) {\n                setFrom(data.weekContent.suppliersWeek.length - 9);\n            }\n        }\n      }, [data]);\n\n    return (\n        <div className=\"row\">\n            {/* Title Box - Desktop View */}\n            <div className=\"col-12 d-flex justify-content-center align-items-center section-title px-5 mx-2\">\n                <h3>Andamento settimanale delle somministrazioni</h3>\n            </div>\n            {/* // Title Box - Desktop View */}\n            <div className=\"row col-12 m-2 p-2 \">\n                <div className=\"col-12 col-md-6 align-items-end testo-info-campania d-none d-sm-none d-md-flex d-lg-flex\"></div>\n                <div className=\"col-12 col-md-6  position-relative\">\n\n                    <div className=\"bg-gradient-bar\"></div>\n                </div>\n                <div className=\"col-12 col-md-4\" style={{ backgroundColor: \"#17324D\" }}>\n                    <div className=\"p-2 position-relative\">\n                        <div className=\"p-4\">\n                            <img src=\"group_person.svg\" alt=\"Logo\" className=\"img-fluid\" />\n                        </div>\n                        <div className=\"mt-4 ml-3\">\n                            {suppliers.map((supply, index) => {\n                                return (\n                                    <div className=\"row\" key={supply}>\n                                        <div className=\"circle\" style={{ backgroundColor: suppliersColor[supply] }}></div>\n                                        <span className=\"legend\">{supply}</span>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-12 col-md-8 text-white\"  style={{ backgroundColor: \"#17324D\" }}>\n                <div className=\"text-white text-center mt-3 \">*Passa con il mouse sulle barre del grafico per visualizzare i dati della settimana</div>\n                    <StackedBarChart\n                        title=\"\"\n                        xtitle=\"Somministrazione settimanale\"\n                        ytitle=\"\"\n                        width={780}\n                        height={350}\n                        marginBottom={10}\n                        property={{ xprop: \"label\", yprop: \"total\" }}\n\n                        colors={suppliersColor}\n                        keys={suppliers}\n                        data={suppliersWeek}\n                        selectedFrom={from}\n                        selectedTo={to}\n                    />\n                </div>\n                {suppliersWeek.length > 0 && (\n                    <RangeWeek min={0} max={suppliersWeek.length} from={from} to={to} changeFrom={(value) => setFrom(value)} changeTo={(value) => setTo(value)}  />\n                )}\n            </div>\n                <div>*Fai scorrere i selettori per aumentare o diminuire le settimane da visualizzare</div>\n        </div>\n    )\n};","import { React, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nexport const Over60HStackedBarChart = ({\n  handleRectClick,\n  height,\n  width,\n  data,\n  keys,\n  labels,\n  colors,\n  selectedCodeAge,\n  regionSelected\n  }) => {\n\n  const myRef = useRef();\n  const divRef = useRef();\n\n  useEffect(() => {\n      doExit();\n      draw();\n      // eslint-disable-next-line\n  }, [data, keys, labels, selectedCodeAge]);\n\n\n  const responsivefy = (svg) => {\n    // Container is the DOM element, svg is appended.\n    // Then we measure the container and find its\n    // aspect ratio.\n    const container = d3.select(svg.node().parentNode),\n      width = parseInt(svg.style(\"width\"), 10),\n      height = parseInt(svg.style(\"height\"), 10),\n      aspect = width / height;\n\n    // Add viewBox attribute to set the value to initial size\n    // add preserveAspectRatio attribute to specify how to scale\n    // and call resize so that svg resizes on page load\n    svg\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .attr(\"preserveAspectRatio\", \"xMinYMid\")\n      .call(resize);\n\n    d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n    function resize() {\n      const targetWidth = parseInt(container.style(\"width\"));\n      svg.attr(\"width\", targetWidth);\n      svg.attr(\"height\", Math.round(targetWidth / aspect));\n    }\n  };\n\n  function doExit() {\n    d3.select(divRef.current).selectAll(\"svg\").remove();\n  }\n\n  const draw = () => {\n\n    const dataset = d3.stack().keys(keys)(data);\n\n    // append element\n    const svg = d3\n      .select(divRef.current)\n      .append(\"svg\")\n      .style('margin-bottom', 10)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    const margin = { y: 30, x: 60 };\n\n    // axis\n    const xScale = d3.scaleLinear().domain([0, d3.max(data, function(d) { return d['somministrazioni'] + d['guariti'] + d['totale']; })]);\n    const yScale = d3.scaleBand().padding(0.2);\n    xScale.range([0, width]);\n    yScale.range([0, height]).domain(data.map((d) => d.label));\n\n    svg\n      .attr(\"width\", width + 2 * margin.x)\n      .attr(\"height\", height + 2 * margin.y)\n      .call(responsivefy) // Call responsivefy to make the chart responsive\n      .attr(\"id\", \"svg-stack-bar\");\n\n    const chart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.x},${margin.y})`);\n\n    chart\n      .append(\"g\")\n      .attr(\"class\", \"axis\")\n      .attr(\"transform\", `translate(0, 0)`)\n      .style(\"font-size\", \"12px\")\n      .call(d3.axisLeft(yScale))\n      .attr('stroke-width', 0)\n        .selectAll(\"text\")\n            .attr(\"y\", 0)\n            .attr(\"x\", -30)\n            .style(\"text-anchor\", \"start\")\n            .style(\"fill\", \"#19191a\");\n\n\n    const tooltip = d3\n      .select('body')\n      .append('div')\n      .attr('class', 'd3-tooltip')\n      .style('position', 'absolute')\n      .style('z-index', '10')\n      .style('display', 'none')\n      .style('padding', '10px')\n      .style('background', 'rgba(0,0,0,0.8)')\n      .style('border-radius', '4px')\n      .style('color', '#fff');\n\n    const path = chart.selectAll().data(dataset);\n\n    path\n      .enter()\n      .append(\"g\")\n      .attr(\"fill\", function(d) {\n        return colors[d.index];\n      })\n      .attr(\"dose\", function(d) {\n        return d.key;\n      })\n      .selectAll(\"rect\")\n      .data(function(d) {\n        return d;\n      })\n      .enter().append(\"rect\")\n      .on(\"click\", (e, d) => {\n        handleRectClick(d);\n        tooltip.html(``).style('display', 'none');\n      })\n      .attr(\"opacity\", (d) => {\n        const ageCode = d.data.label.toLowerCase().replaceAll(' ', '_');\n\n        let opac = selectedCodeAge === ageCode ? 1 : !selectedCodeAge ? 1 : 0.3;\n        return opac;\n      })\n      .attr(\"x\", function(d) {\n        return xScale(d[0]) + 60;\n      })\n      .attr(\"y\", function(d) {\n        return yScale(d.data.label);\n      })\n      .attr(\"width\", function(d) {\n        return xScale(d[1]) - xScale(d[0]);\n      })\n      .attr(\"height\", yScale.bandwidth())\n      .on('mouseover', function (d, i) {\n        d3.select(this).transition().attr('fill', '#0BD9D3');\n      })\n      .on('mousemove', function (event, d) {\n        let regione = regionSelected ? \" \" + regionSelected : \"\";\n\n        tooltip\n          .style('top', event.pageY - 10 + 'px')\n          .style('left', event.pageX + 10 + 'px');\n\n          if (d3.select(this.parentNode).attr(\"dose\") === 'totale') {\n            let sum = d.data[\"somministrazioni\"] + d.data[\"guariti\"] + d.data[\"totale\"];\n\n            tooltip\n              .style('top', event.pageY - 10 + 'px')\n              .style('left', event.pageX + 10 + 'px');\n            tooltip\n              .html(\n                  `<div style=\"text-align: center; line-height: 1.15rem;\">\n                  <div style=\"font-size: 12px;\">${regione}</div>\n                  <div><b>${d.data.label}</b></div>\n                  <div style=\"font-size: 14px;\">Platea</div>\n                  <div>${sum.toLocaleString('it')}</div>\n                  </div>`\n                  )\n              .style('display', null);\n          }\n          else {\n            tooltip\n              .html(\n                  `<div style=\"text-align: center; line-height: 1.15rem;\">\n                  <div style=\"font-size: 12px;\">${regione} ${d.data.label}</div>\n                  <div style=\"text-align: center\"><b>${labels[d3.select(this.parentNode).attr(\"dose\")]} </b></div>\n                  <div style=\"font-size: 14px;\">${(d[1]).toLocaleString('it')}</div>`\n              )\n              .style('display', null);\n          }\n      })\n      .on('mouseout', function (d) {\n          tooltip.html(``).style('display', 'none');\n          d3.select(this).transition().attr('fill', colors[d.key]);\n      });\n\n    path.exit().remove();\n  };\n\n  return (\n    <div ref={divRef} className=\"chart svg-container\">\n      <svg ref={myRef} className=\"svg-content-responsive\"></svg>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { isEmpty, max } from \"lodash\";\nimport { Over60HStackedBarChart } from \"../components/Over60HStackedBarChart\";\nimport { MapArea } from \"../components/MapArea\";\n\nexport const Over60 = ({ data }) => {\n    const [over60Color, setOver60Color] = useState([]);\n    const [over60, setOver60] = useState([]);\n    const [over60Keys, setOver60Keys] = useState([]);\n    const [over60Data, setOver60Data] = useState([]);\n    const [keyValueOver60, setKeyValueOver60] = useState({});\n\n    const [categoryMapData, setCategoryMapData] = useState([]);\n    const [categoryMapField, setCategoryMapField] = useState(\"totale\");\n\n    const [categorySelectedRegion, setCategorySelectedRegion] = useState(null);\n    const [categorySelectedRegionDescr, setCategorySelectedRegionDescr] = useState(null);\n    const [selectedCodeAge, setSelectedCodeAge] = useState(null);\n\n    useEffect(() => {\n        if (!isEmpty(data)) {\n            setOver60Color(data.over60Color);\n            setOver60(data.over60);\n            setOver60Data(data.over60Data);\n            setOver60Keys(data.keysOver60);\n            setCategoryMapData(data.over60MapData);\n            setKeyValueOver60(data.keyValueOver60);\n        }\n    }, [data]);\n\n    const resetFilter = () => {\n        setSelectedCodeAge(null);\n        setCategorySelectedRegion(null);\n        setCategorySelectedRegionDescr(null);\n        setOver60Data(data.over60Data);\n        setCategoryMapField(\"totale\");\n        setCategoryMapData(data.over60MapData);\n    };\n\n    const fillMapCategoryArea = ({ region, maxValue, field }) => {\n        let scaleOp = 0;\n        if (region.code === categorySelectedRegion) {\n          scaleOp = 1;\n        } else if (!categorySelectedRegion) {\n          scaleOp = max([region[field] / maxValue, 0.1]);\n        } else {\n          const valueToFill = region[field] / (2 * maxValue);\n          scaleOp = max([valueToFill, 0.1]);\n        }\n        return `rgba(0,102,204,${scaleOp}) `;\n    };\n\n    const handleMapCategoryClick = (region) => {\n        if (selectedCodeAge) {\n          resetFilter();\n        }\n\n        if (categorySelectedRegion === region.code) {\n          resetFilter();\n        } else {\n          setCategorySelectedRegion(region.code);\n          setCategorySelectedRegionDescr(region.area);\n          setOver60Data(data.over60RegionData[region.code]);\n        }\n    };\n\n    const handleCategoryBarChartClick = (cat) => {\n        if (categorySelectedRegion) {\n          resetFilter();\n        }\n\n        const ageCode = cat.data.label.toLowerCase().replaceAll(' ', '_');\n\n        if (selectedCodeAge === ageCode) {\n          resetFilter();\n        } else {\n          setSelectedCodeAge(ageCode);\n          setCategoryMapField(ageCode);\n        }\n    };\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-12 col-md-6\">\n\n                {/* Graph */}\n                <Over60HStackedBarChart\n                    width={+350}\n                    height={+120}\n                    property={{ xprop: \"label\", yprop: \"total\" }}\n                    handleRectClick={handleCategoryBarChartClick}\n                    regionSelected={categorySelectedRegionDescr}\n                    selectedCodeAge={selectedCodeAge}\n                    colors={over60Color}\n                    keys={over60Keys}\n                    labels={keyValueOver60}\n                    data={over60Data}\n                />\n                {/* // Graph */}\n\n                 {/* Legend */}\n                 <div className=\"row mb-4 ml-4\">\n                    {over60.map((itemVal, index) => {\n                        return (\n                            <div className=\"row\" key={itemVal}>\n                                <div className=\"circle\" style={{ backgroundColor: over60Color[index] }}></div>\n                                <div className=\"legend-dark mr-4\">{itemVal}</div>\n                            </div>\n                        )\n                    })}\n                </div>\n                {/* // Legend */}\n\n                <p className=\"d-none d-sm-block text-center\">*Passa con il mouse sulle barre del grafico per visualizzare i dati di dettaglio</p>\n            </div>\n            <div className=\"col-12 col-md-6 my-0 py-0\">\n\n                {/* Map Title - Mobile View*/}\n                <div className=\"p-4 d-lg-none\">\n                    <div className=\"text-center\">\n                        <h5>Percentuale copertura per regione</h5>\n                    </div>\n                </div>\n                {/* // Map Title - Mobile View*/}\n\n                {/* Map Graph */}\n                <MapArea\n                    fillMapDeliveryArea={fillMapCategoryArea}\n                    summary={categoryMapData}\n                    handleMapDeliveryClick={handleMapCategoryClick}\n                    fillBy={categoryMapField}\n                    percentage={true}\n                    tooltip={(r) => {\n                            return (\n                                r.area +\n                                \" \" +\n                                (r[categoryMapField] && r[categoryMapField].toFixed(2).toLocaleString(\"it\") + \"%\")\n                            )\n                        }\n                    }\n                    className=\"ml-5\"\n                />\n                {/* // Map Graph */}\n\n                {/* Map Title - Desktop View*/}\n                {/* <div className=\"p-4 position-relative d-none d-lg-block\" style={{ left: \"300px\", top: \"-390px\" }}> */}\n                <div className=\"p-4 d-none d-lg-block map-legend\">\n                    <div className=\"d-flex justify-content-start pr-5\">\n                        <h5 className=\"pl-3 pl-sm-1\">\n                            Percentuale copertura\n                            <br /> per regione\n                        </h5>\n                    </div>\n                </div>\n                {/* // Map Title - Desktop View*/}\n            </div>\n        </div>\n    )\n};","import React, { useEffect, useState } from \"react\";\nimport { Over60 } from \"../containers/over60\";\n\nexport const Databox = ({ data }) => {\n\n    const [somministrazioniOver60, setSomministrazioniOver60] = useState(''); // Somministrazioni over 60\n    const [percentualeSomministrazioniOver60, setPercentualeSomministrazioniOver60] = useState(''); // Percentuale Somministrazioni over 60\n\n    const [guarigioniOver60, setGuarigioniOver60] = useState(''); // Guarigioni over 60\n    const [percentualeGuarigioniOver60, setPercentualeGuarigioniOver60] = useState(''); // Percentuale Guarigioni over 60\n\n    const [totaleOver60, setTotaleOver60] = useState(''); // Somministrazioni + Guarigioni over 60\n    const [percentualeTotaleOver60, setPercentualeTotaleOver60] = useState(''); // Percentuale Somministrazioni + Guarigioni over 60\n\n    const [totalePrimaDose, setTotalePrimaDose] = useState(''); // Prima Dose\n    const [percentualePrimaDosePopolazione, setPercentualePrimaDosePopolazione] = useState(''); // Percentuale Prima Dose\n\n    const [totalePersoneVaccinate, setTotalePersoneVaccinate] = useState(''); // Completamento ciclo vaccinale\n    const [totalePersoneVaccinatePopolazione, setTotalePersoneVaccinatePopolazione] = useState(''); // Percentuale Completamento ciclo vaccinale\n\n    const [totaleDoseAddizionaleBooster, setTotaleDoseAddizionaleBooster] = useState(''); // Dose aggiuntiva/booster\n    const [percentualeDoseAddizionaleBooster, setPercentualeDoseAddizionaleBooster] = useState(''); // Percentuale Dose aggiuntiva/booster\n\n    const [totalePersoneSecondBooster, setTotalePersoneSecondBooster] = useState(''); // Dose seconda booster\n    const [percentualePersoneSecondBooster, setPercentualePersoneSecondBooster] = useState(''); // Percentuale Dose seconda booster\n\n    const [totalePersoneThirdBooster, setTotalePersoneThirdBooster] = useState(''); // Dose terza booster\n    const [percentualePersoneThirdBooster, setPercentualePersoneThirdBooster] = useState(''); // Percentuale Dose terza booster\n\n    const [totalePersoneGuarite, setTotalePersoneGuarite] = useState(''); // Guariti\n    const [totalePersoneGuaritePopolazione, setTotalePersoneGuaritePopolazione] = useState(''); // Percentuale Guariti\n\n    const [totalePersoneGuariteDoppiaDose, setTotalePersoneGuariteDoppiaDose] = useState(''); // Guariti con doppia dose\n    const [totalePersoneGuaritePopolazioneDoppiaDose, setTotalePersoneGuaritePopolazioneDoppiaDose] = useState(''); // Percentuale Guariti con doppia dose\n\n    const [totaleAlmenoUnaGuariti, setTotaleAlmenoUnaGuariti] = useState(''); // Prima Dose + Guariti\n    const [percentualeAlmenoUnaGuariti, setPercentualeAlmenoUnaGuariti] = useState(''); // Percentuale Prima Dose + Guariti\n\n    const [totaleDoseAddizionaleGuaritiDoppiaDose, setTotaleDoseAddizionaleGuaritiDoppiaDose] = useState(''); // Booster + Guariti doppia dose\n    const [percentualeDoseAddizionaleGuaritiDoppiaDose, setPercentualeDoseAddizionaleGuaritiDoppiaDose] = useState(''); // Percentuale Booster + Guariti doppia dose\n\n    const [totaleGuaritiDopoDoseBooster, setTotaleGuaritiDopoDoseBooster] = useState(''); // Guariti dopo dose booster\n    const [percentualeGuaritiDopoDoseBooster, setPercentualeGuaritiDopoDoseBooster] = useState(''); // Percentuale Guariti dopo dose booster\n\n    const [totaleGuaritiDopoSecondaDoseBooster, setTotaleGuaritiDopoSecondaDoseBooster] = useState(''); // Guariti dopo seconda dose booster\n    const [percentualeGuaritiDopoSecondaDoseBooster, setPercentualeGuaritiDopoSecondaDoseBooster] = useState(''); // Percentuale Guariti dopo seconda dose booster\n\n    const [totaleBooster, setTotaleBooster] = useState(''); // Totale booster\n    const [percentualeTotaleBooster, setPercentualeTotaleBooster] = useState(''); // Percentuale Totale booster\n\n    const [totaleThirdBooster, setTotaleThirdBooster] = useState(''); // Totale booster 3 dose booster\n    const [percentualeTotaleThirdBooster, setPercentualeTotaleThirdBooster] = useState(''); // Percentuale Totale booster 3 dose booster\n\n    const [totalePrimaDoseBaby, setTotalePrimaDoseBaby] = useState(''); // Prima Dose Baby\n    const [percentualePrimaDosePopolazioneBaby, setPercentualePrimaDosePopolazioneBaby] = useState(''); // Percentuale Prima Dose Baby\n\n    const [totalePersoneVaccinateBaby, setTotalePersoneVaccinateBaby] = useState(''); // Completamento ciclo vaccinale Baby\n    const [totalePersoneVaccinatePopolazioneBaby, setTotalePersoneVaccinatePopolazioneBaby] = useState(''); // Percentuale Completamento ciclo vaccinale Baby\n\n    const [totalePersoneGuariteBaby, setTotalePersoneGuariteBaby] = useState(''); // Guariti Baby\n    const [totalePersoneGuaritePopolazioneBaby, setTotalePersoneGuaritePopolazioneBaby] = useState(''); // Percentuale Guariti Baby\n\n    const [totalePrimaDoseConGuaritiBaby, setTotalePrimaDoseConGuaritiBaby] = useState(''); // Prima Dose Baby + Guariti Baby\n    const [percentualeTotalePrimaDoseConGuaritiBaby, setPercentualeTotalePrimaDoseConGuaritiBaby] = useState(''); // Percentuale Prima Dose Baby + Guariti Baby\n\n    useEffect(() => {\n\n        // Somministrazioni over 60\n        setSomministrazioniOver60(format(data?.totalDoses?.somministrazioni_over60));\n        setPercentualeSomministrazioniOver60(format(data?.totalDoses?.somministrazioni_over60 / data?.databoxContent?.totalPlateaOver60 * 100, true));\n\n        // Guarigioni over 60\n        setGuarigioniOver60(format(data?.totalDoses?.guarigioni_over60));\n        setPercentualeGuarigioniOver60(format(data?.totalDoses?.guarigioni_over60 / data?.databoxContent?.totalPlateaOver60 * 100, true));\n\n        // Totale over 60\n        if (data?.totalDoses?.guarigioni_over60) {\n            setTotaleOver60(format(data?.totalDoses?.guarigioni_over60 + data?.totalDoses?.somministrazioni_over60));\n            setPercentualeTotaleOver60(format((data?.totalDoses?.guarigioni_over60 + data?.totalDoses?.somministrazioni_over60) / data?.databoxContent?.totalPlateaOver60 * 100, true));\n        }\n\n        // Prima Dose\n        let prima = (data?.totalDoses?.prima_dose + data?.totalDoses?.pregressa_infezione);\n        if (!isNaN(prima)) {\n            setTotalePrimaDose(format(prima));\n            setPercentualePrimaDosePopolazione(format(prima / data?.databoxContent?.totalPlatea * 100, true));\n\n            //Prima Dose + Guariti\n            setTotaleAlmenoUnaGuariti(format((prima + data?.databoxContent?.totalGuaritiNotBaby)));\n            setPercentualeAlmenoUnaGuariti(format((prima + data?.databoxContent?.totalGuaritiNotBaby) / data?.databoxContent?.totalPlatea * 100, true));\n        }\n\n        // Completamento ciclo vaccinale\n        let tot = (data?.totalDoses?.seconda_dose + data?.totalDoses?.prima_dose_janssen + data?.totalDoses?.pregressa_infezione);\n        if (!isNaN(tot)) {\n            setTotalePersoneVaccinate(format(tot));\n            setTotalePersoneVaccinatePopolazione(format(tot / data?.databoxContent?.totalPlatea * 100, true));\n        }\n\n        // Dose aggiuntiva/booster\n        setTotaleDoseAddizionaleBooster(data?.totalDoses?.dose_addizionale_booster);\n        setPercentualeDoseAddizionaleBooster(format(data?.totalDoses?.dose_addizionale_booster / data?.databoxContent?.totalPlateaDoseAddizionaleBooster * 100, true));\n\n        // Dose second booster\n        setTotalePersoneSecondBooster(format(data?.totalDoses?.dose_second_booster));\n        setPercentualePersoneSecondBooster(format(data?.totalDoses?.dose_second_booster / data?.databoxContent?.totalPlateaDoseSecondBooster * 100, true))\n        \n        // Dose third booster\n        setTotalePersoneThirdBooster(format(data?.totalDoses?.dose_third_booster));\n        setPercentualePersoneThirdBooster(format(data?.totalDoses?.dose_third_booster / data?.databoxContent?.totalPlateaDoseThirdBooster * 100, true));\n\n        // Guariti\n        setTotalePersoneGuarite(format(data?.databoxContent?.totalGuaritiNotBaby));\n        setTotalePersoneGuaritePopolazione(format(data?.databoxContent?.totalGuaritiNotBaby / data?.databoxContent?.totalPlatea * 100, true));\n\n        // Guariti con doppia dose\n        setTotalePersoneGuariteDoppiaDose(data?.databoxContent?.totalGuaritiDoppiaNotBaby);\n        setTotalePersoneGuaritePopolazioneDoppiaDose(format(data?.databoxContent?.totalGuaritiDoppiaNotBaby/ data?.databoxContent?.totalPlateaDoseAddizionaleBooster * 100, true));\n\n        // Dose aggiuntiva/booster + Guariti con doppia dose\n        setTotaleDoseAddizionaleGuaritiDoppiaDose(format(data?.databoxContent?.totalGuaritiDoppiaNotBaby + data?.totalDoses?.dose_addizionale_booster));\n        setPercentualeDoseAddizionaleGuaritiDoppiaDose(format((data?.databoxContent?.totalGuaritiDoppiaNotBaby + data?.totalDoses?.dose_addizionale_booster) / data?.databoxContent?.totalPlateaDoseAddizionaleBooster* 100, true));\n\n        // Guariti dopo prima dose booster\n        setTotaleGuaritiDopoDoseBooster(format(data?.databoxContent?.totalGuaritiBoosterNotBaby));\n        setPercentualeGuaritiDopoDoseBooster(format(data?.databoxContent?.totalGuaritiBoosterNotBaby / data?.databoxContent?.totalPlateaDoseSecondBooster * 100, true));\n\n         // Guariti dopo seconda dose booster\n         setTotaleGuaritiDopoSecondaDoseBooster(format(data?.databoxContent?.totalGuaritiSecondBoosterNotBaby));\n         setPercentualeGuaritiDopoSecondaDoseBooster(format(data?.databoxContent?.totalGuaritiSecondBoosterNotBaby / data?.databoxContent?.totalPlateaDoseThirdBooster * 100, true));\n\n        // Totale booster\n        setTotaleBooster(format(data?.totalDoses?.dose_second_booster + data?.databoxContent?.totalGuaritiBoosterNotBaby)); \n        setPercentualeTotaleBooster(format((data?.totalDoses?.dose_second_booster + data?.databoxContent?.totalGuaritiBoosterNotBaby) / (data?.databoxContent?.totalPlateaDoseSecondBooster) * 100, true));\n\n        // Totale booster terza dose\n        setTotaleThirdBooster(format(data?.totalDoses?.dose_third_booster + data?.databoxContent?.totalGuaritiSecondBoosterNotBaby)); \n        setPercentualeTotaleThirdBooster(format((data?.totalDoses?.dose_third_booster + data?.databoxContent?.totalGuaritiSecondBoosterNotBaby) / (data?.databoxContent?.totalPlateaDoseThirdBooster) * 100, true));\n\n        // Prima Dose Baby\n        let primaBaby = (data?.totalDoses?.prima_dose_baby + data?.totalDoses?.pregressa_infezione_baby);\n        if (!isNaN(primaBaby)) {\n            setTotalePrimaDoseBaby(format(primaBaby));\n            setPercentualePrimaDosePopolazioneBaby(format(primaBaby / data?.databoxContent?.totalPlateaBaby* 100, true));\n        }\n\n        // Completamento ciclo vaccinale Baby\n        let totBaby = (data?.totalDoses?.seconda_dose_baby + data?.totalDoses?.prima_dose_janssen_baby + data?.totalDoses?.pregressa_infezione_baby);\n        if (!isNaN(totBaby)) {\n            setTotalePersoneVaccinateBaby(format(totBaby));\n            setTotalePersoneVaccinatePopolazioneBaby(format(totBaby / data?.databoxContent?.totalPlateaBaby* 100, true));\n        }\n\n        // Guariti Baby\n        setTotalePersoneGuariteBaby(format(data?.databoxContent?.totalGuaritiBaby));\n        setTotalePersoneGuaritePopolazioneBaby(format(data?.databoxContent?.totalGuaritiBaby / data?.databoxContent?.totalPlateaBaby* 100, true));\n\n        // Prima Dose + Guariti Baby\n        setTotalePrimaDoseConGuaritiBaby(format(primaBaby + data?.databoxContent?.totalGuaritiBaby));\n        setPercentualeTotalePrimaDoseConGuaritiBaby(format((primaBaby + data?.databoxContent?.totalGuaritiBaby) / data?.databoxContent?.totalPlateaBaby* 100, true));\n    }, [data]);\n\n    function format(data, digit = false) {\n        if (digit) {\n            return data?.toLocaleString('it', {minimumFractionDigits: 2, maximumFractionDigits: 2});\n        }\n        return data?.toLocaleString('it');\n    }\n\n    return (\n        <div className=\"p-3 mb-5\">\n\n            <div className=\"col-12 d-flex justify-content-center align-items-center p-3 section-title small\">\n                <div className=\"mb-2\" >\n                    <h3 className=\"text-center\">Copertura vaccinale Covid-19<br />Over 60</h3>\n                </div>\n            </div>\n\n            <div className=\"row bg-box p-2 mb-4\">\n                <div className=\"col-md-4 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Somministrazioni</h5>\n                                <div className=\"box-numbers\">{somministrazioniOver60}</div>\n                                <div className=\"box-text\">{percentualeSomministrazioniOver60} % della popolazione over 60<br />oggetto di somministrazione anti Covid-19<br />da al massimo 4 mesi</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Guarigioni</h5>\n                                <div className=\"box-numbers\">{guarigioniOver60}</div>\n                                <div className=\"box-text\">{percentualeGuarigioniOver60} % della popolazione over 60<br />guarita dall'infezione<br />da al massimo 4 mesi</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Totale</h5>\n                                <div className=\"box-numbers\">{totaleOver60}</div>\n                                <div className=\"box-text\">{percentualeTotaleOver60} % della popolazione over 60</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Over60 data={data.over60Content} />                   {/* Grafico over 60 */}\n\n            <div className=\"col-12 d-flex justify-content-center align-items-center p-3 section-title small\">\n                <div className=\"mb-2\" >\n                    <h3 className=\"text-center\">Ciclo Vaccinale Primario</h3>\n                </div>\n            </div>\n\n            <div className=\"row bg-box p-2 mb-4\">\n                <div className=\"col-md-4 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Con almeno una dose</h5>\n                                <div className=\"box-numbers\">{totalePrimaDose}</div>\n                                <div className=\"box-text\">{percentualePrimaDosePopolazione} % della popolazione over 12</div>\n                                <div className=\"box-label\" >(persone con almeno una somministrazione)</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Ciclo vaccinale</h5>\n                                <div className=\"box-numbers\">{totalePersoneVaccinate}</div>\n                                <div className=\"box-text\">{totalePersoneVaccinatePopolazione} % della popolazione over 12</div>\n                                <div className=\"box-label\" >(persone che hanno completato il ciclo vaccinale)</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Guariti</h5>\n                                <div className=\"box-numbers\">{totalePersoneGuarite}</div>\n                                <div className=\"box-text\">{totalePersoneGuaritePopolazione} % della popolazione over 12</div>\n                                <div className=\"box-label\" >guarita da al massimo 6 mesi senza alcuna somministrazione</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-12 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Totale</h5>\n                                <div className=\"box-numbers\">{totaleAlmenoUnaGuariti}</div>\n                                <div className=\"box-text\">{percentualeAlmenoUnaGuariti} % della popolazione over 12</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"col-12 d-flex justify-content-center align-items-center p-3 section-title small\">\n                <div className=\"mb-2\" >\n                    <h3 className=\"text-center\">Dose Addizionale/Booster</h3>\n                </div>\n            </div>\n\n            <div className=\"row bg-box p-2 mb-4\">\n                <div className=\"col-md-6 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center\">\n                                <h5 className=\"mt-2 mb-3\">Dose addizionale/richiamo (booster)</h5>\n                                <div className=\"box-numbers\">{totaleDoseAddizionaleBooster?.toLocaleString('it')}</div>\n                                <div className=\"box-text\">{percentualeDoseAddizionaleBooster} % della popolazione potenzialmente oggetto di<br />dose addizionale o booster che ha ultimato il ciclo vaccinale<br />da almeno 4 mesi</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center\">\n                                <h5 className=\"mt-2 mb-3\">Guariti post 2ª dose/unica dose</h5>\n                                <div className=\"box-numbers\">{totalePersoneGuariteDoppiaDose?.toLocaleString('it')}</div>\n                                <div className=\"box-text\">{totalePersoneGuaritePopolazioneDoppiaDose} % della popolazione potenzialmente oggetto di<br />dose addizionale o booster guarita post 2ª dose/unica dose<br />da al massimo 4 mesi</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-12 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2 mb-3\">Totale</h5>\n                                <div className=\"box-numbers\">{totaleDoseAddizionaleGuaritiDoppiaDose}</div>\n                                <div className=\"box-text\">{percentualeDoseAddizionaleGuaritiDoppiaDose} % della platea dose booster</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"col-12 d-flex justify-content-center align-items-center p-3 section-title small\">\n                <div className=\"mb-2\" >\n                    <h3 className=\"text-center\">Seconda dose booster</h3>\n                </div>\n            </div>\n\n            <div className=\"row bg-box p-2 mb-4\">\n                <div className=\"col-md-6 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center\">\n                                <h5 className=\"mt-2 mb-3\">Booster immuno / 2ª dose booster</h5>\n                                <div className=\"box-numbers\">{totalePersoneSecondBooster?.toLocaleString('it')}</div>\n                                <div className=\"box-text\">{percentualePersoneSecondBooster} % della popolazione potenzialmente oggetto di <br />dose booster/2ª booster cha ha ultimato il ciclo vaccinale<br />da almeno 4 mesi</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center\">\n                                <h5 className=\"mt-2 mb-3\">Guariti post 1ª dose booster</h5>\n                                <div className=\"box-numbers\">{totaleGuaritiDopoDoseBooster?.toLocaleString('it')}</div>\n                                <div className=\"box-text\">{percentualeGuaritiDopoDoseBooster} % della popolazione potenzialmente oggetto di <br />2ª dose booster guarita post 1ª dose booster da<br />al massimo 6 mesi</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-12 col-sm-12\">\n                    <div className=\"box-card mb-3\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2 mb-3\">Totale</h5>\n                                <div className=\"box-numbers\">{totaleBooster}</div>\n                                <div className=\"box-text\">{percentualeTotaleBooster} % della platea 2ª dose booster</div>\n                            </div>\n                        </div>\n                    </div>\n                    <small className=\"box-text legend\">*Dati relativi alla popolazione appartenente alle categorie prevalenti oggetto prioritariamente di 2ª dose booster</small>\n                </div>\n            </div>\n\n            <div className=\"col-12 d-flex justify-content-center align-items-center p-3 section-title small\">\n                <div className=\"mb-2\" >\n                    <h3 className=\"text-center\">Terza dose booster</h3>\n                </div>\n            </div>\n\n            <div className=\"row bg-box p-2 mb-4\">\n                <div className=\"col-md-6 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center\">\n                                <h5 className=\"mt-2 mb-3\">3ª dose booster</h5>\n                                <div className=\"box-numbers\">{totalePersoneThirdBooster?.toLocaleString('it')}</div>\n                                <div className=\"box-text\">{percentualePersoneThirdBooster} % della popolazione potenzialmente oggetto di <br />3ª dose booster cha ha ultimato il ciclo vaccinale<br />da almeno 4 mesi</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-6 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center\">\n                                <h5 className=\"mt-2 mb-3\">Guariti post 2ª dose booster</h5>\n                                <div className=\"box-numbers\">{totaleGuaritiDopoSecondaDoseBooster?.toLocaleString('it')}</div>\n                                <div className=\"box-text\">{percentualeGuaritiDopoSecondaDoseBooster} % della popolazione potenzialmente oggetto di <br />3ª dose booster guarita post 2ª dose booster da<br />al massimo 6 mesi</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-12 col-sm-12\">\n                    <div className=\"box-card mb-3\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2 mb-3\">Totale</h5>\n                                <div className=\"box-numbers\">{totaleThirdBooster}</div>\n                                <div className=\"box-text\">{percentualeTotaleThirdBooster} % della platea 3ª dose booster</div>\n                            </div>\n                        </div>\n                    </div>\n                    <small className=\"box-text legend\">*Dati relativi alla popolazione appartenente alle categorie prevalenti oggetto prioritariamente di 3ª dose booster</small>\n                </div>\n            </div>\n\n            <div className=\"col-12 d-flex justify-content-center align-items-center p-3 section-title small\">\n                <div className=\"mb-2\" >\n                    <h3 className=\"text-center\">Somministrazione platea 5-11 anni</h3>\n                </div>\n            </div>\n\n            <div className=\"row bg-box mb-4\">\n                <div className=\"col-md-4 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Con almeno una dose</h5>\n                                <div className=\"box-numbers\">{totalePrimaDoseBaby}</div>\n                                <div className=\"box-text\">{percentualePrimaDosePopolazioneBaby} % della popolazione 5-11</div>\n                                <div className=\"box-label\" >(persone con almeno una somministrazione)</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Ciclo vaccinale</h5>\n                                <div className=\"box-numbers\">{totalePersoneVaccinateBaby}</div>\n                                <div className=\"box-text\">{totalePersoneVaccinatePopolazioneBaby} % della popolazione 5-11</div>\n                                <div className=\"box-label\" >(persone che hanno completato il ciclo vaccinale)</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-4 col-sm-12\">\n                    <div className=\"box-card p-2\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Guariti</h5>\n                                <div className=\"box-numbers\">{totalePersoneGuariteBaby}</div>\n                                <div className=\"box-text\">{totalePersoneGuaritePopolazioneBaby} % della popolazione 5-11</div>\n                                <div className=\"box-label\" >guarita da al massimo 6 mesi senza alcuna somministrazione</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-12 col-sm-12\">\n                    <div className=\"box-card\">\n                        <div className=\"p-1\">\n                            <div className=\"align-items-center justify-content-center text-center mb-4\">\n                                <h5 className=\"mt-2\">Totale</h5>\n                                <div className=\"box-numbers\">{totalePrimaDoseConGuaritiBaby}</div>\n                                <div className=\"box-text\">{percentualeTotalePrimaDoseConGuaritiBaby} % della popolazione 5-11</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>        \n    );\n};","import { React, useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { maxX } from \"../utils\";\n\nexport const BarChartSupplier = (props) => {\n\n  const width = +props.width, //hack to get int\n    height = +props.height;\n  const myRef = useRef();\n  const divRef = useRef();\n\n  useEffect(() => {\n    doExit();\n    draw();\n    // eslint-disable-next-line\n  }, [props]);\n\n\n  const responsivefy = (svg) => {\n    // Container is the DOM element, svg is appended.\n    // Then we measure the container and find its\n    // aspect ratio.\n    const container = d3.select(svg.node().parentNode),\n      width = parseInt(svg.style(\"width\"), 10),\n      height = parseInt(svg.style(\"height\"), 10),\n      aspect = width / height;\n\n    // Add viewBox attribute to set the value to initial size\n    // add preserveAspectRatio attribute to specify how to scale\n    // and call resize so that svg resizes on page load\n    svg\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .attr(\"preserveAspectRatio\", \"xMinYMid\")\n      .call(resize);\n\n    d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n    function resize() {\n      const targetWidth = parseInt(container.style(\"width\"));\n      svg.attr(\"width\", targetWidth);\n      svg.attr(\"height\", Math.round(targetWidth / aspect));\n    }\n  };\n\n  function doExit() {\n    d3.select(divRef.current).selectAll(\"svg\").remove();\n  }\n\n  const draw = () => {\n    const data = props?.data || [];\n    const maxScale = data?.reduce(maxX(props.property.yprop), 0) || 0;\n    // append element\n    const svg = d3\n      .select(divRef.current)\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n    const margin = { y: 50, x: 20 };\n\n    // axis\n    const xScale = d3.scaleBand().padding(0.5);\n    const yScale = d3.scaleLinear().domain([0, maxScale]); //max scale should be dynamic\n    yScale.range([height, 0]);\n    xScale.range([0, width]).domain(data.map((d) => d[props.property.xprop]));\n\n    svg\n      .attr(\"width\", width + 2 * margin.x)\n      .attr(\"height\", height + 2 * margin.y)\n      .call(responsivefy) // Call responsivefy to make the chart responsive\n      .attr(\"id\", \"svg-bar\");\n\n    const chart = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.x},${margin.y})`);\n\n    chart\n      .append(\"g\")\n      .attr(\"class\", \"axis-dark\")\n      .attr(\"transform\", `translate(0,${height})`)\n      .style('font-size', 16)\n      .call(d3.axisBottom(xScale));\n\n    const path = chart.selectAll().data(data);\n\n    path\n      .enter()\n      .append(\"rect\").on('click', (e, d) => {\n        props.handleBarChartClick(d);\n      })\n      .attr('id', (d) => d?.fornitore)\n      .attr('opacity', (d) => {\n        let opac = props.selected?.fornitore === d?.fornitore ? 1 : !props.selected ? 1 : 0.1;\n        return opac;\n      })\n      .attr(\"class\", \"bg-bar\")\n      .attr(\"x\", (d) => +xScale(d[props.property.xprop]))\n      .attr(\"y\", (d) => yScale(d[props.property.yprop]))\n      .attr(\"height\", (d) => height - yScale(d[props.property.yprop]))\n      .attr(\"width\", xScale.bandwidth())\n      .append(\"title\")\n      .attr(\"x\", (d) => xScale(d[props.property.xprop]))\n      .attr(\"y\", (d) => yScale(d[props.property.yprop]))\n      .text((d) => `Fornitore ${d[props.property.xprop]} totale: ${d[props.property.yprop]}`)\n\n    path\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"bartext-dark\")\n      .attr(\"text-anchor\", \"center\")\n      .attr(\"fill\", \"black\")\n      .attr(\"x\", (d) => xScale(d[props.property.xprop]) -5 )\n      .attr(\"y\", (d) =>\n        height - yScale(d[props.property.yprop]) >= 0\n          ? yScale(d[props.property.yprop]) - 10\n          : yScale(d[props.property.yprop])\n      )\n      .text((d) => d[props.property.yprop]?.toLocaleString('it'));\n\n    path.exit().remove();\n  };\n\n  return (\n    <div ref={divRef}>\n      {/* <div className=\"w-100 h-100 d-flex justify-content-start pr-5\">\n        <img src=\"logo.png\" width=\"35\" height=\"35\" alt=\"Logo\" />\n        <h5 className=\"pl-3 pl-sm-1\">Distribuzione vaccini per fornitore</h5>\n      </div> */}\n      <svg ref={myRef}></svg>\n    </div>\n  );\n};\n","import { React, useEffect, useState } from \"react\";\nimport { isEmpty } from \"lodash\";\nimport { simulateClick } from './../utils';\nimport { BarChartSupplier } from \"./BarChartsSupplier\";\n\nexport const Supplier = (data) => {\n    const [selectedLocationCategoryMap, setSelectedLocationCategoryMap] = useState(null);\n    const [selectedSupplier, setelectedSupplier] = useState(null);\n    const [deliveryBarChartData, setdeliveryBarChartData] = useState([]);\n    const [totalSuplier, setTotalSuplier] = useState(0);\n\n    const resetFilter = () => {\n        setdeliveryBarChartData(data?.data?.allDosesSupplier);\n        setTotalSuplier(data?.data?.totalSuplier);\n        setelectedSupplier(null);\n        setSelectedLocationCategoryMap(null);\n        setTotalSuplier(data?.data?.totalSuplier);\n    }\n\n    useEffect(() => {\n        if (!isEmpty(data)) {\n            let tmp = data?.data?.allDosesSupplier;\n            if (tmp) {\n                tmp.map(val => {\n                    if (val.fornitore.includes(\"Vaxzevria\")) {\n                        val.fornitore = \"Vaxzevria\";\n                    }\n\n                    return val;\n                })\n            }\n            setdeliveryBarChartData(tmp);\n            setTotalSuplier(data?.data?.totalSuplier);\n        }\n    }, [data]);\n\n    const handleDeliveryBarChartClick = (bar) => {\n        if (selectedSupplier === bar) {\n            resetFilter();\n        } else if (selectedLocationCategoryMap) {\n            resetFilter();\n            simulateClick(bar.fornitore);\n        } else {\n            handleRectClick(bar);\n            setelectedSupplier(bar);\n            setTotalSuplier(bar?.totale);\n        }\n    }\n\n    const handleRectClick = (currentRect) => {\n        setelectedSupplier(currentRect)\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-12 col-md-12 mt-4\">\n                {/* Box Title */}\n            <div className=\"col-12 d-flex justify-content-center align-items-center section-title mx-2\">\n                <div className=\"text-center\">\n                    <h3>Distribuzione vaccini per fornitore</h3>\n                </div>\n            </div>\n            {/* // Box Title */}\n\n            <div className=\"col-12 col-md-12 m-3\">\n                {/* Total Box - Mobile Layout */}\n                <div className=\"d-lg-none bg-box box-mobile m-3\">\n                        <div className=\"text-white\">\n                            <div className=\"d-flex justify-content-center pt-5\">\n                                <h5>Totale vaccini distribuiti</h5>\n                            </div>\n                            <div className=\"d-flex justify-content-center\">\n                                <p className=\"box-numbers\">{totalSuplier?.toLocaleString('it')}</p>\n                            </div>\n                            <div className=\"col-12 d-flex justify-content-end pb-2\">\n                                <img alt=\"reset-plot2\" src=\"reset_white.png\" onClick={resetFilter} height=\"36px\"/>\n                            </div>\n                        </div>\n                    </div>\n                    {/* // Total Box - Mobile Layout */}\n\n                    {/* Total Box - Desktop Layout */}\n                    <div className=\"offset-md-8 col-md-4 d-none d-lg-block\">\n                        <div className=\"bg-box box-card box-right\">\n                            <div className=\"text-white\">\n                                <div className=\"d-flex justify-content-start pt-3 pl-5\">\n                                    <h5>Totale vaccini distribuiti</h5>\n                                </div>\n                                <div className=\"d-flex justify-content-start pl-5\">\n                                    <p className=\"box-numbers\" >{totalSuplier?.toLocaleString('it')}</p>\n                                </div>\n                                <div className=\"col-12 d-flex justify-content-end pb-2\">\n                                    <img alt=\"Reset\" src=\"reset_white.png\" onClick={resetFilter} height=\"36px\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {/* // Total Box - Desktop Layout */}\n                </div>\n            </div>\n\n            {/* Supplier BarChart */}\n            <div className=\"col-12 col-md-7 w-100 h-100 pb-5\">\n                <BarChartSupplier\n                    width=\"850\"\n                    handleBarChartClick={handleDeliveryBarChartClick}\n                    height=\"350\"\n                    selected={selectedSupplier}\n                    property={{ xprop: \"fornitore\", yprop: \"totale\" }}\n                    data={deliveryBarChartData}\n                />\n            </div>\n            {/* Supplier BarChart */}\n        </div>\n    );\n};","import { React, useEffect } from \"react\";\nimport $ from \"jquery\";\nimport DataTable from \"datatables.net\";\nimport \"datatables.net-bs4/css/dataTables.bootstrap4.min.css\";\n\n$.DataTable = DataTable;\nconst columns = [\n    { title: \"Regione\", data: \"area\" },\n    { title: \"Punto di somministrazione\", data: \"denominazione_struttura\" },\n    { title: \"Tipologia\", data: \"tipologia\" }\n];\n\nexport const LocationsTable = (props) => {\n\n    useEffect(() => {\n        const {setLocationCount} = props;\n\n        const table = $(\"#datatable-locations\")\n        .find(\"table\")\n        .DataTable({\n            dom:\n            \"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'>>\" +\n            \"<'row'<'col-sm-12'tr>>\" +\n            \"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>\",\n            paging: false,\n            columnDefs: [{\n                \"targets\": [1,2],\n                \"searchable\": false\n            }],\n            searching: true,\n            destroy: true,\n            bLengthChange: false,\n            info: false,\n            scrollY: '550px',\n            scrollCollapse: true,\n            data: props.summary?.locations || [],\n            columns,\n        });\n\n        if (props?.selected) {\n            table.search(props.selected).draw();\n        } else {\n            table.search(\" \").draw();\n        }\n\n        setLocationCount(table.rows( {search:'applied'} ).count()/2)\n    });\n\n    return (\n\n        <div id=\"datatable-locations\">\n            <table className=\"display compact\" cellSpacing=\"0\" width=\"100%\"/>\n        </div>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { isEmpty, max } from \"lodash\";\nimport { MapArea } from \"./../components/MapArea\";\nimport { LocationsTable } from \"./../components/LocationsTable\";\n\nconst TextBoxTotal = ({locationCount}) => (\n\n    <>\n\n        <div className=\"d-flex pl-5 pt-3\">\n            <h5>Totale punti somministrazione</h5>\n        </div>\n        <div className=\"d-flex pl-5\">\n            <p className=\"box-numbers\">{locationCount}</p>\n        </div>\n\n    </>\n)\n\nconst TextBoxMap = () => (\n    <div className=\"w-100 h-100 d-flex justify-content-start pr-5\">\n        <h5 className=\"pl-3 pl-sm-1\">Principali punti di<br /> somministrazione <br /> per regione</h5>\n    </div>\n)\n\nexport const Locations = ({ data }) => {\n    const [summary, setSummary] = useState({});\n    const [selectedLocation, setSelectedLocation] = useState(\"\");\n    const [locationCount, setLocationCount] = useState(0);\n\n    useEffect(() => {\n        if (!isEmpty(data)) {\n            setSummary(data);\n        }\n    }, [data]);\n\n    const resetFilter = () => {\n        setSelectedLocation(\"\");\n        setLocationCount(0);\n    };\n\n    const fillMapDeliveryArea = ({ region, maxValue, field }) => {\n        let scaleOp = 0;\n            if (region.area === selectedLocation) {\n                scaleOp = 1;\n            } else if (!selectedLocation) {\n                scaleOp = max([region[field] / maxValue, 0.1]);\n            } else {\n                const valueToFill = region[field] / (2 * maxValue);\n                scaleOp = max([valueToFill, 0.1]);\n            }\n        return `rgba(23,50,77,${scaleOp})`;\n    };\n\n    const handleClick = (region) => {\n        if (selectedLocation === region.area) {\n            setSelectedLocation(null);\n        } else {\n            setSelectedLocation(region.area);\n        }\n    };\n\n    return (\n        <div className=\"row\">\n            {/* Box Title */}\n            <div className=\"col-12 d-flex justify-content-center align-items-center section-title mx-2\">\n                <div className=\"text-center\">\n                    <h3>Principali punti di somministrazione</h3>\n                    <p>(Sono inclusi i punti di somministrazione ospedalieri e territoriali;<br />\n                        non sono inclusi i punti di somministrazione temporanei)</p>\n                </div>\n            </div>\n            {/* Box Title */}\n\n            <div className=\"col-12 col-md-12 m-3\">\n                {/* Total Box - Mobile View */}\n                <div className=\"d-lg-none bg-box box-mobile m-3\">\n                        <div className=\"text-white\">\n                            <TextBoxTotal locationCount={locationCount}/>\n                        </div>\n                    <div className=\"col-12 d-flex justify-content-end pb-2\">\n                        <img alt=\"reset-plot\" src=\"reset_white.png\" onClick={resetFilter} height=\"36\" />\n                    </div>\n                </div>\n                {/* // Total Box - Mobile View */}\n\n                {/* Total Box - Desktop View */}\n                <div className=\"col-4 col-md-4 d-none d-lg-block\">\n                <div className=\"bg-box box-card box-left\">\n                        <div className=\"text-white\">\n\n                        <TextBoxTotal locationCount={locationCount}/>\n\n                            <div className=\"col-12 d-flex justify-content-end pb-2\">\n                                <img alt=\"reset-white\" src=\"reset_white.png\" onClick={resetFilter} height=\"36px\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* // Total Box - Desktop View */}\n            </div>\n            <div className=\"col-12 col-md-6\">\n                {/* Map Legend - Mobile View */}\n                <div className=\"p-2 d-lg-none text-center\">Principali Punti di Somministrazione per Regione</div>\n\n                {/* Map Legend - Desktop View */}\n                <div className=\"d-none d-lg-block map-legend\" ><TextBoxMap/></div>\n\n                {/* Map Graph */}\n                <div className=\"mt-5\">\n                <MapArea\n                    fillMapDeliveryArea={fillMapDeliveryArea}\n                    summary={data.locationsByRegion}\n                    handleMapDeliveryClick={handleClick}\n                    tooltip={(r) => r.area + \": \" + (r.locations && r.locations.toLocaleString(\"it\")) }\n                    fillBy=\"locations\"\n                    className=\"ml-5 w-100 h-100\"\n                />\n                </div>\n                {/* // Map Graph */}\n            </div>\n            {/* Data Table */}\n            <div className=\"col-12 col-md-6 pl-3\">\n                <LocationsTable\n                    summary={{ ...summary }}\n                    selected={selectedLocation}\n                    className=\"mr-5 h-100\"\n                    setLocationCount={setLocationCount}\n                />\n            </div>\n            {/* // Data Table */}\n        </div>\n    );\n};\n","import { useState, useEffect } from 'react';\nimport { HeaderBar } from \"./components/HeaderBar\";\nimport { FooterBar } from \"./components/FooterBar\";\nimport { Total } from \"./components/Total\";\nimport { loadData } from \"./loadData\";\nimport { Deliveries } from \"./containers/deliveries\";\nimport { AgeDoses } from \"./containers/agedoses\";\nimport { Healed } from \"./containers/healed\";\nimport { Weeks } from \"./containers/weeks\";\nimport { Databox } from \"./containers/databox\";\nimport { Supplier } from './components/Supplier';\nimport { hideLoader } from \"./utils\";\nimport \"./App.css\";\nimport { Locations } from \"./containers/locations\";\n\n\nfunction App() {\n    const [summary, setSummary] = useState({});\n\n    useEffect(() => {\n        loadData().then((d) => {\n        hideLoader();\n        setSummary(d);\n        });\n    }, []);\n\n    return (\n        <div>\n            <HeaderBar />\n            <div className=\"container\">\n                <Total summary={{ ...summary }} />          {/* Totale Somministrazioni */}\n                <Databox data={summary} />                  {/* Box riepilogo dati */}\n                <Deliveries data={summary} />               {/* Tabella Distribuzione Dosi */}\n                <Healed data={summary} />                   {/* Grafico guariti */}\n                <Weeks data={summary} />                    {/* Grafico Andamento Settimanale delle Somministrazioni */}\n                <AgeDoses data={summary} />                 {/* Grafico Somministrazioni per fascia d'età */}\n                <Supplier data={summary} />                 {/* Grafico Distribuzione Vaccini per Fornitore */}\n                <Locations data={summary} />                {/* Tabella Principali Punti di Somministrazione */}\n            </div>\n            <FooterBar />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}